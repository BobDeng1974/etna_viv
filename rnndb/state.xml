<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright (c) 2012-2013 The Etnaviv Project

 Permission is hereby granted, free of charge, to any person obtaining a
 copy of this software and associated documentation files (the "Software"),
 to deal in the Software without restriction, including without limitation
 the rights to use, copy, modify, merge, publish, distribute, sub license,
 and/or sell copies of the Software, and to permit persons to whom the
 Software is furnished to do so, subject to the following conditions:

 The above copyright notice and this permission notice (including the
 next paragraph) shall be included in all copies or substantial portions
 of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 DEALINGS IN THE SOFTWARE.
-->
<database xmlns="http://nouveau.freedesktop.org/"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://nouveau.freedesktop.org/ rules-ng.xsd">
<!-- Vivante GCxxxx render states and registers overview -->
<!--
     Registers and render states live in the same address space, although some
     can only be accessed through the kernel register interface and others only through
     state-modifying commands (TODO: figure out which ones).

     To use the 2D engine, the pipe should be set to PIPE_2D and to use the 3D
     engine, the pipe should be set to PIPE_3D.

     This file is in Envytools rules-ng-ng format with the following extensions:

         - regXX attribute "value": initial state value in new context
         - attribute "brief": short human-friendly name of this register/array, can be an attribute as well as <brief>;
                                   <doc> is left for longer specific documentation
         - type="fixedp": (N/2).(N/2) fixed-point value, where N is the number of bits of the bit field,
             so in case of a 32 bit field it will be a 16.16 FP value.
         - domains can be used as types (to signify a memory address in that domain)
         - for registers: masked="yes", defaults to "no" to mark registers that support partial 
           state writes by using masks per bit group (mask for state group A must be called A_MASK)

     TODO: variants are somewhat different from NV; what features are supported is determined by (most common first)
         1) Chip (minor) feature flags
         2) Chip specs (number of instructions, pipelines, ...)
         3) Chip model (GC800, GC2000, ...)
         4) Chip revision of the form 0x1234

         Generally the chip feature flags are used to distinguish functionality, as well as the specs, and not the model 
         and revision. Unlike NV which parametrizes everything on the model, for GC this is done only for bugfixes.
-->
<domain name="VIVM" brief="GPU memory domain">
</domain>
<domain name="VIVS" brief="GPU state">

    <!-- Hardware description fields.
         For access in userspace these are also exposed over the ioctl interface through QUERY_CHIP_IDENTITY.
     --> 
    <enum name="chipModel">
        <value value="0x0300" name="GC300"/> <!-- 2D graphics -->
        <value value="0x0320" name="GC320"/> <!-- 2D graphics + Compose engine -->
        <value value="0x0350" name="GC350"/> <!-- OpenVG -->
        <value value="0x0355" name="GC355"/> <!-- OpenVG -->
        <value value="0x0400" name="GC400"/> <!-- 3D graphics, 1 core, according to Vivante it is "the smallest OpenGL ES 2.0 compliant GPU available today" -->
        <value value="0x0410" name="GC410"/>
        <value value="0x0420" name="GC420"/>
        <value value="0x0450" name="GC450"/>
        <value value="0x0500" name="GC500"/>
        <value value="0x0530" name="GC530"/>
        <value value="0x0600" name="GC600"/>
        <value value="0x0700" name="GC700"/>
        <value value="0x0800" name="GC800"/> <!-- 3D graphics, 1 core -->
        <value value="0x0860" name="GC860"/>
        <value value="0x0880" name="GC880"/>
        <value value="0x1000" name="GC1000"/> <!-- 3D graphics, 2 cores -->
        <value value="0x2000" name="GC2000"/> <!-- 3D graphics, 4 cores -->
        <value value="0x2100" name="GC2100"/>
        <value value="0x4000" name="GC4000"/> <!-- 3D graphics, 8 cores -->
    </enum>
    <bitset name="chipFeatures">
        <bitfield pos="0" name="FAST_CLEAR" brief="Fast clear available"/>
        <bitfield pos="1" name="SPECIAL_ANTI_ALIASING" brief="Special AA (FSAA)"/>
        <bitfield pos="2" name="PIPE_3D" brief="3D engine is present"/>
        <bitfield pos="3" name="DXT_TEXTURE_COMPRESSION" brief="DXT texture compression"/>
        <bitfield pos="4" name="DEBUG_MODE" brief="Debug registers present"/>
        <bitfield pos="5" name="Z_COMPRESSION" brief="Depth and color compression"/>
        <bitfield pos="6" name="YUV420_SCALER" brief="YUV 4:2:0 support in filter blit"/>
        <bitfield pos="7" name="MSAA" brief="Multi Sample Anti-Aliasing"/>
        <bitfield pos="8" name="DC" brief="Display controller"/>
        <bitfield pos="9" name="PIPE_2D" brief="2D engine is present"/>
        <bitfield pos="10" name="ETC1_TEXTURE_COMPRESSION" brief="Ericcson texture compression"/>
        <bitfield pos="11" name="FAST_SCALER" brief="HD scaler present"/>
        <bitfield pos="12" name="HIGH_DYNAMIC_RANGE" brief="High dynamic range support"/>
        <bitfield pos="13" name="YUV420_TILER" brief="YUV 4:2:0 tiler is available"/>
        <bitfield pos="14" name="MODULE_CG" brief="Second-level clock gating available"/>
        <bitfield pos="15" name="MIN_AREA" brief="Optimized for minimum area"/>
        <bitfield pos="16" name="NO_EARLY_Z" brief="No early-Z"/>
        <bitfield pos="17" name="NO_422_TEXTURE" brief="No 4:2:2 YUV texture input format"/>
        <bitfield pos="18" name="BUFFER_INTERLEAVING" brief="Supports interleaving depth and color buffers"/>
        <bitfield pos="19" name="BYTE_WRITE_2D" brief="Supports byte write in 2D"/>
        <bitfield pos="20" name="NO_SCALER" brief="No 2D scaler"/>
        <bitfield pos="21" name="YUY2_AVERAGING" brief="YUY2 averaging support in resolve"/>
        <bitfield pos="22" name="HALF_PE_CACHE" brief="PE cache is half"/>
        <bitfield pos="23" name="HALF_TX_CACHE" brief="TX cache is half"/>
        <bitfield pos="24" name="YUY2_RENDER_TARGET" brief="YUY2 support in PE and YUY2 to RGB conversion in resolve"/>
        <bitfield pos="25" name="MEM32" brief="32 bit memory address support"/>
        <bitfield pos="26" name="PIPE_VG" brief="OpenVG engine is present"/>
        <bitfield pos="27" name="VGTS" brief="VG tesselator is present"/>
        <bitfield pos="28" name="FE20" brief="FE 2.0 is present"/>
        <bitfield pos="29" name="BYTE_WRITE_3D" brief="3D PE has byte write capability"/>
        <bitfield pos="30" name="RS_YUV_TARGET" brief="Supports resolving into YUV target"/>
        <bitfield pos="31" name="32_BIT_INDICES" brief="32 bit indices can be used with indexed drawing"/>
    </bitset>
    <bitset name="chipMinorFeatures0">
        <bitfield pos="0" name="FLIP_Y" brief="Y flipping capability is added to resolve"/>
        <bitfield pos="1" name="DUAL_RETURN_BUS" brief="Dual Return Bus from HI to clients"/>
        <bitfield pos="2" name="ENDIANNESS_CONFIG" brief="Configurable endianness support"/>
        <bitfield pos="3" name="TEXTURE_8K" brief="8Kx8K texture support"/>
        <bitfield pos="4" name="CORRECT_TEXTURE_CONVERTER" brief="Driver hack is not needed (?)"/>
        <bitfield pos="5" name="SPECIAL_MSAA_LOD" brief="Special LOD calculation when MSAA is on"/>
        <bitfield pos="6" name="FAST_CLEAR_FLUSH" brief="Proper flush is done in fast clear cache"/>
        <bitfield pos="7" name="2DPE20" brief="Pixel Engine 2.0"/>
        <bitfield pos="8" name="CORRECT_AUTO_DISABLE" brief="Reserved"/>
        <bitfield pos="9" name="RENDERTARGET_8K" brief="8Kx8K render target support"/>
        <bitfield pos="10" name="2BITPERTILE" brief="Two status bits per tile (instead of four)"/>
        <bitfield pos="11" name="SEPARATE_TILE_STATUS_WHEN_INTERLEAVED" brief="Use 2 separate tile status buffers in interleaved mode"/>
        <bitfield pos="12" name="SUPER_TILED" brief="32x32 super tile is available"/>
        <bitfield pos="13" name="VG_20" brief="Major updates to VG pipe (TS buffer tiling, state masking)"/>
        <bitfield pos="14" name="TS_EXTENDED_COMMANDS" brief="New commands added to the VG tessellator"/>
        <bitfield pos="15" name="COMPRESSION_FIFO_FIXED"/>
        <bitfield pos="16" name="HAS_SIGN_FLOOR_CEIL" brief="Has SIGN, FLOOR and CEIL shader instructions"/>
        <bitfield pos="17" name="VG_FILTER" brief="VG filter is available"/>
        <bitfield pos="18" name="VG_21" brief="Minor updates to VG pipe (Event generation from VG, TS, PE, tiled image support)"/>
        <bitfield pos="19" name="SHADER_HAS_W" brief="W is sent to SH from RA"/>
        <bitfield pos="20" name="HAS_SQRT_TRIG" brief="Has SQRT, SIN, COS instructions"/>
        <bitfield pos="21" name="MORE_MINOR_FEATURES" brief="Chip has CHIP_MINOR_FEATURE_(1|2|3)">
            <doc>Also, in the shader unavailable registers will return 0</doc>
        </bitfield>
        <bitfield pos="22" name="MC20" brief="New style MC with separate paths for color and depth"/>
        <bitfield pos="23" name="MSAA_SIDEBAND" brief="Put the MSAA data into sideband fifo"/>
        <bitfield pos="24" name="BUG_FIXES0"/>
        <bitfield pos="25" name="VAA" brief="Coverage anti-aliasing"/>
        <bitfield pos="26" name="BYPASS_IN_MSAA" brief="Shader supports bypass mode when MSAA is enabled"/>
        <bitfield pos="27" name="HZ" brief="Hierarchical Z-buffer"/>
        <bitfield pos="28" name="NEW_TEXTURE" brief="New texture unit is available"/>
        <bitfield pos="29" name="2D_A8_TARGET" brief="2D engine supports A8 target"/>
        <bitfield pos="30" name="CORRECT_STENCIL" brief="Correct stencil behavior in depth only"/>
        <bitfield pos="31" name="ENHANCE_VR" brief="Enhance video rasterizer"/>
    </bitset>
    <bitset name="chipMinorFeatures1">
        <bitfield pos="0" name="RSUV_SWIZZLE" brief="Resolve UV swizzle"/>
        <bitfield pos="1" name="V2_COMPRESSION" brief="V2 compression"/>
        <bitfield pos="2" name="VG_DOUBLE_BUFFER" brief="Double buffering support for VG (second TS-->VG semaphore is present)"/>
        <bitfield pos="3" name="EXTRA_EVENT_STATES"/>
        <bitfield pos="4" name="NO_STRIPING_NEEDED"/>
        <bitfield pos="5" name="TEXTURE_STRIDE" brief="Texture has stride and memory addressing"/>
        <bitfield pos="6" name="BUG_FIXES3"/>
        <bitfield pos="7" name="AUTO_DISABLE"/>
        <bitfield pos="8" name="AUTO_RESTART_TS"/>
        <bitfield pos="9" name="DISABLE_PE_GATING"/>
        <bitfield pos="10" name="L2_WINDOWING"/>
        <bitfield pos="11" name="HALF_FLOAT" brief="Supports 16-bit floating point type"/>
        <bitfield pos="12" name="PIXEL_DITHER"/>
        <bitfield pos="13" name="TWO_STENCIL_REFERENCE"/>
        <bitfield pos="14" name="EXTENDED_PIXEL_FORMAT"/>
        <bitfield pos="15" name="CORRECT_MIN_MAX_DEPTH" brief="EEZ and HZ are correct"/>
        <bitfield pos="16" name="2D_DITHER" brief="2D dither and filter+alpha available"/>
        <bitfield pos="17" name="BUG_FIXES5"/>
        <bitfield pos="18" name="NEW_2D" brief="Mirror extension available"/>
        <bitfield pos="19" name="NEW_FP" brief="New floating point arithmetic"/>
        <bitfield pos="20" name="TEXTURE_ALIGN_4" brief="Textures can be aligned to 4 instead of 16"/>
        <bitfield pos="21" name="NON_POWER_OF_TWO" brief="Non power-of-two texture support"/>
        <bitfield pos="22" name="LINEAR_TEXTURE_SUPPORT"/>
        <bitfield pos="23" name="HALTI0" brief="Various features related to texturing and vertex processing">
            <doc>
                - Anisotropic texture filtering
                - 3D texture support
                - Texture array support
                - GL_(INT|UNSIGNED)_10_10_10_2_OES texture / vertex support
                - 16 attr per vertex i.s.o. 10, and 12 varyings i.s.o. 8
            </doc>
        </bitfield>
        <bitfield pos="24" name="CORRECT_OVERFLOW_VG"/>
        <bitfield pos="25" name="NEGATIVE_LOG_FIX"/>
        <bitfield pos="26" name="RESOLVE_OFFSET"/>
        <bitfield pos="27" name="OK_TO_GATE_AXI_CLOCK"/>
        <bitfield pos="28" name="MMU_VERSION"/>
        <bitfield pos="29" name="WIDE_LINE"/>
        <bitfield pos="30" name="BUG_FIXES6"/>
        <bitfield pos="31" name="FC_FLUSH_STALL"/>
    </bitset>
    <bitset name="chipMinorFeatures2">
        <bitfield pos="0" name="LINE_LOOP"/>
        <bitfield pos="1" name="LOGIC_OP"/>
        <bitfield pos="2" name="UNK2"/>
        <bitfield pos="3" name="SUPERTILED_TEXTURE"/>
        <bitfield pos="4" name="UNK4"/>
        <bitfield pos="5" name="RECT_PRIMITIVE"/>
        <bitfield pos="6" name="COMPOSITION" brief="Compose engine present"/>
        <bitfield pos="7" name="CORRECT_AUTO_DISABLE_COUNT"/>
        <bitfield pos="8" name="UNK8"/>
        <bitfield pos="9" name="UNK9"/>
        <bitfield pos="10" name="UNK10"/>
        <bitfield pos="11" name="SAMPLERBASE_16" brief="New texture block exists (0x10000 - 0x11000)"/>
        <bitfield pos="12" name="UNK12"/>
        <bitfield pos="13" name="UNK13"/>
        <bitfield pos="14" name="UNK14"/>
        <bitfield pos="15" name="EXTRA_TEXTURE_STATE" brief="Extra texture state (0x12000)"/>
        <bitfield pos="16" name="FULL_DIRECTFB"/>
        <bitfield pos="17" name="2D_TILING" brief="2D tiling and YUV blit"/>
        <bitfield pos="18" name="THREAD_WALKER_IN_PS"/>
        <bitfield pos="19" name="TILE_FILLER"/>
        <bitfield pos="20" name="UNK20"/>
        <bitfield pos="21" name="2D_MULTI_SOURCE_BLIT"/>
        <bitfield pos="22" name="UNK22"/>
        <bitfield pos="23" name="UNK23"/>
        <bitfield pos="24" name="UNK24"/>
        <bitfield pos="25" name="MIXED_STREAMS"/>
        <bitfield pos="26" name="2D_420_L2CACHE"/>
        <bitfield pos="27" name="UNK27"/>
        <bitfield pos="28" name="2D_NO_INDEX8_BRUSH"/>
        <bitfield pos="29" name="TEXTURE_TILED_READ" brief="Tiled read also available with COMPOSITION"/>
        <bitfield pos="30" name="UNK30"/>
        <bitfield pos="31" name="UNK31"/>
    </bitset>
    <bitset name="chipMinorFeatures3"> <!-- Only for newer hardware/drivers (gc1000+?) -->
        <bitfield pos="0" name="ROTATION_STALL_FIX"/>
        <bitfield pos="1" name="UNK1"/>
        <bitfield pos="2" name="2D_MULTI_SOURCE_BLT_EX" brief="8 instead of 4 multisource blit sources"/>
        <bitfield pos="3" name="UNK3"/>
        <bitfield pos="4" name="UNK4"/>
        <bitfield pos="5" name="UNK5"/>
        <bitfield pos="6" name="UNK6"/>
        <bitfield pos="7" name="UNK7"/>
        <bitfield pos="8" name="UNK8"/>
        <bitfield pos="9" name="UNK9"/>
        <bitfield pos="10" name="BUG_FIXES10"/>
        <bitfield pos="11" name="UNK11"/>
        <bitfield pos="12" name="BUG_FIXES11"/>
        <bitfield pos="13" name="UNK13"/>
        <bitfield pos="14" name="UNK14"/>
        <bitfield pos="15" name="UNK15"/>
        <bitfield pos="16" name="UNK16"/>
        <bitfield pos="17" name="UNK17"/>
        <bitfield pos="18" name="UNK18"/>
        <bitfield pos="19" name="UNK19"/>
        <bitfield pos="20" name="UNK20"/>
        <bitfield pos="21" name="UNK21"/>
        <bitfield pos="22" name="UNK22"/>
        <bitfield pos="23" name="UNK23"/>
        <bitfield pos="24" name="UNK24"/>
        <bitfield pos="25" name="UNK25"/>
        <bitfield pos="26" name="UNK26"/>
        <bitfield pos="27" name="UNK27"/>
        <bitfield pos="28" name="UNK28"/>
        <bitfield pos="29" name="UNK29"/>
        <bitfield pos="30" name="UNK30"/>
        <bitfield pos="31" name="UNK31"/>
    </bitset>
    <!-- Other generic enums -->
    <enum name="ENABLE_DISABLE" inline="yes"> 
        <!-- Generic type for functionality that can be enabled/disabled, it can be somewhat clearer than a
             boolean (RNN default type for 1-bit values) in some cases.
          -->
        <value value="0" name="DISABLE"/>
        <value value="1" name="ENABLE"/>
    </enum>
    <enum name="PIPE_ID">
        <value value="0" name="PIPE_3D"/>
        <value value="1" name="PIPE_2D"/> <!-- DE only -->
    </enum>
    <enum name="VARYING_COMPONENT_USE">
        <value value="0" name="UNUSED" brief="Component is not used"/>
        <value value="1" name="USED" brief="Component is used"/>
        <value value="2" name="POINTCOORD_X" brief="glPointCoord.x"/>
        <value value="3" name="POINTCOORD_Y" brief="glPointCoord.y"/>
    </enum>
    <enum name="COMPARE_FUNC" brief="Compare function (for glStencilFunc and glDepthFunc)">
        <value value="0" name="NEVER"/>
        <value value="1" name="LESS"/>
        <value value="2" name="EQUAL"/>
        <value value="3" name="LEQUAL"/>
        <value value="4" name="GREATER"/>
        <value value="5" name="NOTEQUAL"/>
        <value value="6" name="GEQUAL"/>
        <value value="7" name="ALWAYS"/>
    </enum>
    <enum name="STENCIL_OP" brief="Stencil operation">
        <value value="0" name="KEEP" brief="Keeps the current value"/>
        <value value="1" name="ZERO" brief="Sets the stencil buffer value to 0"/>
        <value value="2" name="REPLACE" brief="Sets the stencil value to ref"/>
        <value value="3" name="INCR" brief="Increments stencil buffer value, clamps to max"/>
        <value value="4" name="DECR" brief="Descrements stencil buffer value, clamps to min"/>
        <value value="5" name="INVERT" brief="Bitwise inverts the current stencil buffer value"/>
        <value value="6" name="INCR_WRAP" brief="Increments stencil buffer value, wraps around"/>
        <value value="7" name="DECR_WRAP" brief="Decrements stencil buffer value, wraps around"/>
    </enum>
    <enum name="BLEND_EQ" brief="Blend equation">
        <doc>determines how pixel blending combines source and destination</doc>
        <value value="0" name="ADD"/>
        <value value="1" name="SUBTRACT"/>
        <value value="2" name="REVERSE_SUBTRACT"/>
        <value value="3" name="MIN"/>
        <value value="4" name="MAX"/>
    </enum>
    <enum name="BLEND_FUNC" brief="glBlendFunc">
        <value value="0" name="ZERO"/>
        <value value="1" name="ONE"/>
        <value value="2" name="SRC_COLOR"/>
        <value value="3" name="ONE_MINUS_SRC_COLOR"/>
        <value value="4" name="SRC_ALPHA"/>
        <value value="5" name="ONE_MINUS_SRC_ALPHA"/>
        <value value="6" name="DST_ALPHA"/>
        <value value="7" name="ONE_MINUS_DST_ALPHA"/>
        <value value="8" name="DST_COLOR"/>
        <value value="9" name="ONE_MINUS_DST_COLOR"/>
        <value value="10" name="SRC_ALPHA_SATURATE"/>
        <value value="11" name="CONSTANT_ALPHA"/>
        <value value="12" name="ONE_MINUS_CONSTANT_ALPHA"/>
        <value value="13" name="CONSTANT_COLOR"/>
        <value value="14" name="ONE_MINUS_CONSTANT_COLOR"/>
    </enum>
    <enum name="RS_FORMAT" brief="Resolve pixel format">
        <value value="0" name="X4R4G4B4"/>
        <value value="1" name="A4R4G4B4"/>
        <value value="2" name="X1R5G5B5"/>
        <value value="3" name="A1R5G5B5"/>
        <value value="4" name="R5G6B5"/>
        <value value="5" name="X8R8G8B8"/>
        <value value="6" name="A8R8G8B8"/>
        <value value="7" name="YUY2"/><!-- only supported with YUY2_AVERAGING -->
    </enum>
    <enum name="TEXTURE_FORMAT" brief="Texture format">
        <value value="1" name="A8"/>
        <value value="2" name="L8"/>
        <value value="3" name="I8"/>
        <value value="4" name="A8L8"/>
        <value value="5" name="A4R4G4B4"/>
        <value value="6" name="X4R4G4B4"/>
        <value value="7" name="A8R8G8B8"/>
        <value value="8" name="X8R8G8B8"/>
        <value value="9" name="A8B8G8R8"/>
        <value value="10" name="X8B8G8R8"/>
        <value value="11" name="R5G6B5"/>
        <value value="12" name="A1R5G5B5"/>
        <value value="13" name="X1R5G5B5"/>
        <value value="14" name="YUY2" brief="YUV 4:2:2"/>
        <value value="15" name="UYVY" brief="YUV 4:2:2 (Alt macropixel ordering)"/>
        <value value="16" name="D16"/>
        <value value="17" name="D24S8"/>
        <value value="19" name="DXT1" brief="S3 Block Compression 1"/>
        <value value="20" name="DXT2_DXT3" brief="S3 Block Compression 2"/>
        <value value="21" name="DXT4_DXT5" brief="S3 Block Compression 3"/>
        <value value="30" name="ETC1" brief="Ericsson Texture Compression"/>
    </enum>
    <enum name="TEXTURE_FORMAT_EXT" brief="Extended texture format">
        <value value="7" name="A16F" brief="16-bit fp alpha format" />
        <value value="8" name="A16L16F" brief="16-bit fp alpha luminosity format" />
        <value value="9" name="A16B16G16R16F" brief="16-bit fp rgba format" />
        <value value="10" name="A32F" brief="32-bit fp alpha format" />
        <value value="11" name="A32L32F" brief="32-bit fp alpha luminosity format" />
        <value value="12" name="A2B10G10R10"/>
    </enum>
    <enum name="TEXTURE_FILTER">
        <value value="0" name="NONE"/>
        <value value="1" name="NEAREST"/>
        <value value="2" name="LINEAR"/>
        <value value="3" name="ANISOTROPIC"/><!-- Only supported if HALTI0 feature bit set -->
    </enum>
    <enum name="TEXTURE_TYPE">
        <value value="2" name="2D"/>
        <value value="5" name="CUBE_MAP"/>
    </enum>
    <enum name="TEXTURE_WRAPMODE">
        <value value="0" name="REPEAT"/>
        <value value="1" name="MIRRORED_REPEAT"/>
        <value value="2" name="CLAMP_TO_EDGE"/>
    </enum>
    <enum name="ENDIAN_MODE" brief="Byte swap configuration">
        <value value="0" name="NO_SWAP" brief="No endian swap"/>
        <value value="1" name="SWAP_16" brief="Swap per 16 bit unit"/>
        <value value="2" name="SWAP_32" brief="Swap per 32 bit unit"/>
    </enum>
    <enum name="SYNC_RECIPIENT" brief="Synchronization source/destination">
        <doc>This is used for synchronization primitives, for example for semaphores and stalling</doc>
        <value value="1" name="FE" brief="Front End"/>
        <value value="5" name="RA" brief="Raster"/>
        <value value="7" name="PE" brief="Pixel Engine"/>
        <value value="11" name="DE" brief="Drawing Engine"/>
    </enum>
    <bitset name="RGBA_BITS" brief="RGBA bits">
        <bitfield pos="0" name="R"/>
        <bitfield pos="1" name="G"/>
        <bitfield pos="2" name="B"/>
        <bitfield pos="3" name="A"/>
    </bitset>

    <!-- State ranges -->
    <stripe name="HI" brief="Host Interface">
        <doc>Host interface contains bits to identify the chip, control clock speed,
            and enable/acknowledge interrupts.
        </doc>
        <reg32 offset="0x00000" name="CLOCK_CONTROL">
            <bitfield high="0" low="0" name="CLK3D_DIS"/>
            <bitfield high="1" low="1" name="CLK2D_DIS"/>
            <bitfield high="8" low="2" name="FSCALE_VAL"/>
            <bitfield high="9" low="9" name="FSCALE_CMD_LOAD"/>
            <bitfield high="10" low="10" name="DISABLE_RAM_CLK_GATING"/>
            <bitfield high="11" low="11" name="DISABLE_DEBUG_REGISTERS"/>
            <bitfield high="12" low="12" name="SOFT_RESET"/>
            <bitfield high="16" low="16" name="IDLE_3D"/>
            <bitfield high="17" low="17" name="IDLE_2D"/>
            <bitfield high="18" low="18" name="IDLE_VG"/>
            <bitfield high="19" low="19" name="ISOLATE_GPU"/>
        </reg32>
        <reg32 offset="0x00004" name="IDLE_STATE" brief="Idle state">
            <doc>Bits are 1 if the module is idle, 0 otherwise.</doc>
            <bitfield pos="0" name="FE" brief="Fetch Engine is idle"/>
            <bitfield pos="1" name="DE" brief="Drawing Engine is idle"/>
            <bitfield pos="2" name="PE" brief="Pixel Engine is idle"/>
            <bitfield pos="3" name="SH" brief="Shader Engine is idle"/>
            <bitfield pos="4" name="PA" brief="Primitive Assembly is idle"/>
            <bitfield pos="5" name="SE" brief="Setup Engine is idle"/>
            <bitfield pos="6" name="RA" brief="Rasterizer is idle"/>
            <bitfield pos="7" name="TX" brief="Texture Engine is idle"/>
            <bitfield pos="8" name="VG" brief="Vector Graphics is idle"/>
            <bitfield pos="9" name="IM" brief="IM is idle"/>
            <bitfield pos="10" name="FP" brief="Fragment processor is idle"/>
            <bitfield pos="11" name="TS" brief="Tile status is idle"/>
            <bitfield pos="31" name="AXI_LP" brief="AXI bus in low power mode"/>
        </reg32>
        <reg32 offset="0x00008" name="AXI_CONFIG" brief="AXI bus configuration">
          <bitfield high="3" low="0" name="AWID"/>
          <bitfield high="7" low="4" name="ARID"/>
          <bitfield high="11" low="8" name="AWCACHE"/>
          <bitfield high="15" low="12" name="ARCACHE"/>
        </reg32>
        <reg32 offset="0x0000C" name="AXI_STATUS" brief="AXI bus status">
          <bitfield high="3" low="0" name="WR_ERR_ID"/>
          <bitfield high="7" low="4" name="RD_ERR_ID"/>
          <bitfield high="8" low="8" name="DET_WR_ERR"/>
          <bitfield high="9" low="9" name="DET_RD_ERR"/>
        </reg32>
        <reg32 offset="0x00010" name="INTR_ACKNOWLEDGE">
          <bitfield high="31" low="0" name="INTR_VEC"/>
        </reg32>
        <reg32 offset="0x00014" name="INTR_ENBL">
          <bitfield high="31" low="0" name="INTR_ENBL_VEC"/>
        </reg32>
        <reg32 offset="0x00018" name="CHIP_IDENTITY"/>
        <reg32 offset="0x0001C" name="CHIP_FEATURE" type="chipFeatures" brief="Chip features"/>
        <reg32 offset="0x00020" name="CHIP_MODEL" type="chipModel" brief="Chip model"/>
        <reg32 offset="0x00024" name="CHIP_REV" brief="Chip revision"/>
        <reg32 offset="0x00028" name="CHIP_DATE" brief="Chip date"/>
        <reg32 offset="0x0002C" name="CHIP_TIME" brief="Chip time"/>
        <reg32 offset="0x00034" name="CHIP_MINOR_FEATURE_0" type="chipMinorFeatures0" brief="Chip minor features 0"/>
        <reg32 offset="0x00038" name="CACHE_CONTROL"/>
        <reg32 offset="0x0003C" name="MEMORY_COUNTER_RESET"/>
        <reg32 offset="0x00040" name="PROFILE_READ_BYTES8" brief="Total reads in terms of 64bits"/>
        <reg32 offset="0x00044" name="PROFILE_WRITE_BYTES8" brief="Total writes in terms of 64bits"/>
        <reg32 offset="0x00048" name="CHIP_SPECS" brief="Chip specifications"/>
        <reg32 offset="0x0004C" name="PROFILE_WRITE_BURSTS" brief="Total write Data Count in terms of 64bits value"/>
        <reg32 offset="0x00050" name="PROFILE_WRITE_REQUESTS" brief="Total write Request Count"/>
        <reg32 offset="0x00058" name="PROFILE_READ_BURSTS" brief="Total Read Data Count in terms of 64bits"/>
        <reg32 offset="0x0005C" name="PROFILE_READ_REQUESTS" brief="Total Read Request Count"/>
        <reg32 offset="0x00060" name="PROFILE_READ_LASTS" brief="Total RLAST Count"/>
        <reg32 offset="0x00064" name="GP_OUT0" brief="General Purpose output register0. R/W but not connected to anywhere"/>
        <reg32 offset="0x00068" name="GP_OUT1" brief="General Purpose output register1. R/W but not connected to anywhere"/>
        <reg32 offset="0x0006C" name="GP_OUT2" brief="General Purpose output register2. R/W but not connected to anywhere"/>
        <reg32 offset="0x00070" name="AXI_CONTROL" brief="Special Handling on AXI Bus"/>
        <reg32 offset="0x00074" name="CHIP_MINOR_FEATURE_1" type="chipMinorFeatures1" brief="Chip minor features 1"/>
        <reg32 offset="0x00078" name="PROFILE_TOTAL_CYCLES" brief="Total cycles">
            <doc>This register is a free running counter.  It can be reset by writing 0 to it.</doc>
        </reg32>
        <reg32 offset="0x0007C" name="PROFILE_IDLE_CYCLES" brief="Total cycles where the GPU is idle">
            <doc>It is reset when PROFILE_TOTAL_CYCLES register is written to. It looks at all the blocks but FE when determining the IP is
            idle.
            </doc>
        </reg32>
        <reg32 offset="0x00080" name="CHIP_SPECS_2" brief="Chip specifications 2"/>
        <reg32 offset="0x00084" name="CHIP_MINOR_FEATURE_2" type="chipMinorFeatures2" brief="Chip minor features 2"/>
        <reg32 offset="0x00088" name="CHIP_MINOR_FEATURE_3" type="chipMinorFeatures3" brief="Chip minor features 3"/>
    </stripe>

    <!-- This block exists at 0x00200 for GC300 models with chipRevision < 0x2000 -->
    <stripe name="PM" brief="Power Management">
        <doc>Features to control power usage.</doc>
        <reg32 offset="0x00100" name="POWER_CONTROLS"/>
        <reg32 offset="0x00104" name="MODULE_CONTROLS"/>
        <reg32 offset="0x00108" name="MODULE_STATUS"/>
        <reg32 offset="0x0010C" name="PULSE_EATER"/>  <!-- power management feature -->
    </stripe>

    <enum name="MMU_EXCEPTION">
        <value value="1" name="SLAVE_NOT_PRESENT"/>
        <value value="2" name="PAGE_NOT_PRESENT"/>
        <value value="3" name="WRITE_VIOLATION"/>
    </enum>
    <stripe name="MMUv2" brief="Memory Management Unit v2">
        <doc>New MMU unit. Only exists on more recent hardware.</doc>
        <reg32 offset="0x00180" name="SAFE_ADDRESS"/>
        <reg32 offset="0x00184" name="CONFIGURATION" masked="yes">
            <bitfield high="0" low="0" name="MODE">
                <value value="0" name="MODE4_K"/>
                <value value="1" name="MODE1_K"/>
            </bitfield>
            <bitfield high="3" low="3" name="MODE_MASK"/>
            <bitfield high="4" low="4" name="FLUSH">
                <value value="1" name="FLUSH"/>
            </bitfield>
            <bitfield high="7" low="7" name="FLUSH_MASK"/>
            <bitfield high="8" low="8" name="ADDRESS_MASK"/>
            <bitfield high="31" low="10" name="ADDRESS"/>
        </reg32>
        <reg32 offset="0x00188" name="STATUS">
            <bitfield high="1" low="0" name="EXCEPTION0" type="MMU_EXCEPTION"/>
            <bitfield high="5" low="4" name="EXCEPTION1" type="MMU_EXCEPTION"/>
            <bitfield high="9" low="8" name="EXCEPTION2" type="MMU_EXCEPTION"/>
            <bitfield high="13" low="12" name="EXCEPTION3" type="MMU_EXCEPTION"/>
        </reg32>
        <reg32 offset="0x0018C" name="CONTROL">
            <bitfield high="0" low="0" name="ENABLE"/>
        </reg32>
        <reg32 offset="0x00190" name="EXCEPTION_ADDR"/>
    </stripe>

    <stripe name="MC" brief="Memory Controller">
        <reg32 offset="0x00400" name="MMU_FE_PAGE_TABLE" brief="Page table for DMA frontend"/>
        <reg32 offset="0x00404" name="MMU_TX_PAGE_TABLE" brief="Page table for texture"/>
        <reg32 offset="0x00408" name="MMU_PE_PAGE_TABLE" brief="Page table for PE color"/>
        <reg32 offset="0x0040C" name="MMU_PEZ_PAGE_TABLE" brief="Page table for PE depth"/>
        <reg32 offset="0x00410" name="MMU_RA_PAGE_TABLE" brief="Page table for rasterize"/>
        <reg32 offset="0x00414" name="DEBUG_MEMORY"/>
        <reg32 offset="0x00418" name="MEMORY_BASE_ADDR_RA"/>
        <reg32 offset="0x0041C" name="MEMORY_BASE_ADDR_FE"/>
        <reg32 offset="0x00420" name="MEMORY_BASE_ADDR_TX"/>
        <reg32 offset="0x00424" name="MEMORY_BASE_ADDR_PEZ"/>
        <reg32 offset="0x00428" name="MEMORY_BASE_ADDR_PE"/>
        <reg32 offset="0x0042C" name="MEMORY_TIMING_CONTROL"/>
        <reg32 offset="0x00430" name="MEMORY_FLUSH"/>
        <reg32 offset="0x00438" name="PROFILE_CYCLE_COUNTER"/>
        <reg32 offset="0x0043C" name="DEBUG_READ0"/>
        <reg32 offset="0x00440" name="DEBUG_READ1"/>
        <reg32 offset="0x00444" name="DEBUG_WRITE"/>
        <reg32 offset="0x00448" name="PROFILE_RA_READ"/> <!-- Rasterize -->
        <reg32 offset="0x0044C" name="PROFILE_TX_READ"/> <!-- Texture -->
        <reg32 offset="0x00454" name="PROFILE_PE_READ"/> <!-- Pixel Engine -->
        <reg32 offset="0x0045C" name="PROFILE_SH_READ"/> <!-- SHader -->
        <reg32 offset="0x00460" name="PROFILE_PA_READ"/> <!-- Primitive Assembly -->
        <reg32 offset="0x00464" name="PROFILE_SE_READ"/> <!-- Setup Engine -->
        <reg32 offset="0x00468" name="PROFILE_MC_READ"/> <!-- Memory Controller -->
        <reg32 offset="0x0046C" name="PROFILE_HI_READ"/> <!-- Host Interface -->
        <reg32 offset="0x00470" name="PROFILE_CONFIG0" brief="Select profile counters"/>
        <reg32 offset="0x00474" name="PROFILE_CONFIG1"/>
        <reg32 offset="0x00478" name="PROFILE_CONFIG2"/>
        <reg32 offset="0x0047C" name="PROFILE_CONFIG3"/>
        <reg32 offset="0x00480" name="BUS_CONFIG"/>
        <reg32 offset="0x00554" name="START_COMPOSITION" brief="Kick off composition engine"/>
        <reg32 offset="0x00558" name="128B_MERGE"/>
    </stripe>

    <stripe name="FE" brief="Fetch Engine"> <!-- Also known as Front End or DMA -->
        <doc>DMA engine. This is the frontend from the CPU to the GPU, and
            takes care of parsing the command stream and loading states, as well as loading
            vertex streams.</doc>
        <reg32 offset="0x00600" name="VERTEX_ELEMENT_CONFIG" value="0x00000000" length="16" stride="4">
            <!-- length="attrCount" where attrCount, the number of attributes, 
                 is 16 if chipMinorFeatures1 bit 23 set, otherwise 12.
             -->
            <bitfield high="3" low="0" name="TYPE" brief="Data type">
                <value value="0" name="BYTE"/>
                <value value="1" name="UNSIGNED_BYTE"/>
                <value value="2" name="SHORT"/>
                <value value="3" name="UNSIGNED_SHORT"/>
                <value value="4" name="INT"/>
                <value value="5" name="UNSIGNED_INT"/>
                <value value="8" name="FLOAT"/>
                <value value="9" name="HALF_FLOAT"/>
                <value value="11" name="FIXED" brief="16.16 fixed point"/>
                <value value="12" name="INT_10_10_10_2"/>
                <value value="13" name="UNSIGNED_INT_10_10_10_2"/>
            </bitfield>
            <bitfield high="5" low="4" name="ENDIAN" type="ENDIAN_MODE"/>
            <bitfield pos="7" name="NONCONSECUTIVE" brief="Enable when this is not consecutive to previous element, or it is the last element"/>
            <bitfield high="10" low="8" name="STREAM" brief="Source stream number"/>
            <bitfield high="13" low="12" name="NUM" brief="Number of elements">
                <value value="0" name="4"/>
                <value value="1" name="1"/>
                <value value="2" name="2"/>
                <value value="3" name="3"/>
            </bitfield>
            <bitfield high="15" low="14" name="NORMALIZE" brief="Normalize to 0..1">
                <value value="0" name="OFF"/>
                <value value="2" name="ON"/>
            </bitfield>
            <bitfield high="23" low="16" name="START" brief="Starting offset of element data"/>
            <bitfield high="31" low="24" name="END" brief="End offset of element data"/>
        </reg32>
        <reg32 offset="0x00640" name="CMD_STREAM_BASE_ADDR"/>
        <reg32 offset="0x00644" name="INDEX_STREAM_BASE_ADDR" value="0x00000000" type="VIVM"/>
        <reg32 offset="0x00648" name="INDEX_STREAM_CONTROL" value="0x00000000">
            <bitfield high="1" low="0" name="TYPE">
                <value value="0" name="UNSIGNED_CHAR" brief="8-bit indices"/>
                <value value="1" name="UNSIGNED_SHORT" brief="16-bit indices"/>
                <value value="2" name="UNSIGNED_INT" brief="32-bit indices"/>
            </bitfield>
        </reg32>
        <reg32 offset="0x0064C" name="VERTEX_STREAM_BASE_ADDR" value="0x00000000" type="VIVM"/> <!-- vertex stream 0 -->
        <reg32 offset="0x00650" name="VERTEX_STREAM_CONTROL" value="0x00000000"> <!-- vertex stream 0 -->
            <bitfield high="7" low="0" name="VERTEX_STRIDE"/>
        </reg32>
        <reg32 offset="0x00654" name="COMMAND_ADDRESS" brief="Base address for the command buffer">
            <doc>The address must be 64-bit aligned and it is always physical. This register cannot be read.</doc>
        </reg32>
        <reg32 offset="0x00658" name="COMMAND_CONTROL">
            <bitfield high="15" low="0" name="PREFETCH" brief="Number of 64-bit words to fetch from the command buffer"/>
            <bitfield pos="16" name="ENABLE" brief="Enable the command parser"/>
        </reg32>
        <reg32 offset="0x0065C" name="DMA_STATUS"/>
        <reg32 offset="0x00660" name="DMA_DEBUG_STATE">
            <bitfield high="4" low="0" name="CMD_STATE"/>
            <bitfield high="9" low="8" name="CMD_DMA_STATE"/>
            <bitfield high="11" low="10" name="CMD_FETCH_STATE"/>
            <bitfield high="13" low="12" name="REQ_DMA_STATE"/>
            <bitfield high="15" low="14" name="CAL_STATE"/>
            <bitfield high="17" low="16" name="VE_REQ_STATE"/>
        </reg32>
        <reg32 offset="0x00664" name="DMA_ADDRESS" brief="The current command decoder address (r/o)"/>
        <reg32 offset="0x00668" name="DMA_LOW"/>
        <reg32 offset="0x0066C" name="DMA_HIGH"/>
        <reg32 offset="0x00670" name="AUTO_FLUSH" value="0x00000000" brief="Auto flush cycles"/>
        <reg32 offset="0x00678" name="UNK00678" value="0x00000000"/>
        <reg32 offset="0x0067C" name="UNK0067C" value="0xFFFFFFFF"/>
        <stripe name="VERTEX_STREAMS" length="8" stride="4"> <!-- vertex stream 1..N -->
            <reg32 offset="0x00680" name="BASE_ADDR" value="0x00000000" type="VIVM"/>
            <reg32 offset="0x006A0" name="CONTROL" value="0x00000000"/>
        </stripe>
        <reg32 offset="0x00700" name="UNK00700" value="0x00000000" length="16" stride="4"/>
        <reg32 offset="0x00740" name="UNK00740" value="0x00000000" length="16" stride="4"/>
        <reg32 offset="0x00780" name="UNK00780" value="0x3F800000" length="16" stride="4"/>
    </stripe>

    <stripe name="GL" brief="Global states">
        <doc>Global device control states. Here is configured what pipe to use (2D or 3D),
            when to send event, when to wait on semaphores and the API mode (OGL or D3D).
        </doc>
        <reg32 offset="0x03800" name="PIPE_SELECT" brief="Select the current graphics pipe">
            <bitfield pos="0" name="PIPE" type="PIPE_ID"/>
        </reg32>
        <reg32 offset="0x03804" name="EVENT" brief="Send an event">
            <bitfield high="4" low="0" name="EVENT_ID"/>
            <bitfield pos="5" name="FROM_FE"/>
            <bitfield pos="6" name="FROM_PE"/>
        </reg32>
        <reg32 offset="0x03808" name="SEMAPHORE_TOKEN" brief="A sempahore state arms the semaphore in the destination">
            <bitfield high="4" low="0" name="FROM" type="SYNC_RECIPIENT"/>
            <bitfield high="12" low="8" name="TO" type="SYNC_RECIPIENT"/>
        </reg32>
        <reg32 offset="0x0380C" name="FLUSH_CACHE" brief="Flush the current pipe">
            <bitfield pos="0" name="DEPTH"/>
            <bitfield pos="1" name="COLOR"/>
            <bitfield pos="2" name="TEXTURE"/>
            <bitfield pos="3" name="PE2D"/>
            <bitfield pos="5" name="SHADER_L1"/>
            <bitfield pos="6" name="SHADER_L2"/>
        </reg32>
        <reg32 offset="0x03810" name="FLUSH_MMU" brief="Flush the virtual addrses lookup cache inside the MC">
            <bitfield pos="0" name="FLUSH_FEMMU" brief="Flush the FE address translation caches"/>
            <bitfield pos="1" name="FLUSH_PEMMU" brief="Flush the PE render target address translation caches"/>
        </reg32>
        <reg32 offset="0x03814" name="VERTEX_ELEMENT_CONFIG" value="0x00000001"/>
        <reg32 offset="0x03818" name="MULTI_SAMPLE_CONFIG" value="0x00000000" masked="yes">
            <bitfield high="1" low="0" name="MSAA_SAMPLES">
                <value value="0" name="NONE"/>
                <value value="1" name="2X"/>
                <value value="2" name="4X"/>
            </bitfield>
            <bitfield pos="3" name="MSAA_SAMPLES_MASK"/>
            <bitfield high="7" low="4" name="MSAA_ENABLES"/>
            <bitfield pos="8" name="MSAA_ENABLES_MASK"/>
            <bitfield high="14" low="12" name="UNK12"/>
            <bitfield pos="15" name="UNK12_MASK"/>
            <bitfield high="17" low="16" name="UNK16"/>
            <bitfield pos="19" name="UNK16_MASK"/>
        </reg32>
        <reg32 offset="0x0381C" name="VARYING_TOTAL_COMPONENTS" brief="Total number of components in all varyings" value="0x00000000">
            <doc>Number of components for all varyings together.</doc>
            <bitfield high="7" low="0" name="NUM"/>
        </reg32>
        <reg32 offset="0x03820" name="VARYING_NUM_COMPONENTS" brief="Number of components in varyings" value="0x00000000">
            <doc>Number of components per varying (PS).</doc>
            <bitfield high="2" low="0" name="VAR0"/>
            <bitfield high="6" low="4" name="VAR1"/>
            <bitfield high="10" low="8" name="VAR2"/>
            <bitfield high="14" low="12" name="VAR3"/>
            <bitfield high="18" low="16" name="VAR4"/>
            <bitfield high="22" low="20" name="VAR5"/>
            <bitfield high="26" low="24" name="VAR6"/>
            <bitfield high="30" low="28" name="VAR7"/>
        </reg32>
        <reg32 offset="0x03828" name="VARYING_COMPONENT_USE" brief="Varying component usage" value="0x00000000" length="2" stride="4">
            <doc>2 bits per varying component, 16 components per 32-bit word.</doc>
            <bitfield high="1" low="0" name="COMP0" type="VARYING_COMPONENT_USE"/> 
            <bitfield high="3" low="2" name="COMP1" type="VARYING_COMPONENT_USE"/>
            <bitfield high="5" low="4" name="COMP2" type="VARYING_COMPONENT_USE"/>
            <bitfield high="7" low="6" name="COMP3" type="VARYING_COMPONENT_USE"/>
            <bitfield high="9" low="8" name="COMP4" type="VARYING_COMPONENT_USE"/>
            <bitfield high="11" low="10" name="COMP5" type="VARYING_COMPONENT_USE"/>
            <bitfield high="13" low="12" name="COMP6" type="VARYING_COMPONENT_USE"/>
            <bitfield high="15" low="14" name="COMP7" type="VARYING_COMPONENT_USE"/>
            <bitfield high="17" low="16" name="COMP8" type="VARYING_COMPONENT_USE"/>
            <bitfield high="19" low="18" name="COMP9" type="VARYING_COMPONENT_USE"/>
            <bitfield high="21" low="20" name="COMP10" type="VARYING_COMPONENT_USE"/>
            <bitfield high="23" low="22" name="COMP11" type="VARYING_COMPONENT_USE"/>
            <bitfield high="25" low="24" name="COMP12" type="VARYING_COMPONENT_USE"/>
            <bitfield high="27" low="26" name="COMP13" type="VARYING_COMPONENT_USE"/>
            <bitfield high="29" low="28" name="COMP14" type="VARYING_COMPONENT_USE"/>
            <bitfield high="31" low="30" name="COMP15" type="VARYING_COMPONENT_USE"/>
        </reg32>
        <reg32 offset="0x03834" name="UNK03834" value="0x00000000"/>
        <reg32 offset="0x03838" name="UNK03838" value="0x00000000"/>
        <reg32 offset="0x0384C" name="API_MODE" brief="API mode" value="0x00000000">
            <value value="0" name="OPENGL"/>
            <value value="1" name="OPENVG"/>
            <value value="2" name="OPENCL"/>
        </reg32>
        <reg32 offset="0x03850" name="CONTEXT_POINTER"/> <!-- DEBUG -->
        <reg32 offset="0x03A00" name="UNK03A00"/>
        <reg32 offset="0x03C00" name="STALL_TOKEN">
            <bitfield high="4" low="0" name="FROM" type="SYNC_RECIPIENT"/>
            <bitfield high="12" low="8" name="TO" type="SYNC_RECIPIENT"/>
            <bitfield pos="30" name="FLIP0"/>
            <bitfield pos="31" name="FLIP1"/>
        </reg32>
    </stripe>

    <!-- PIPE_2D states, see also gcreg.h in gcx project -->
    <enum name="DE_FORMAT" brief="2D pixel format">
        <value value="0" name="X4R4G4B4"/>
        <value value="1" name="A4R4G4B4"/>
        <value value="2" name="X1R5G5B5"/>
        <value value="3" name="A1R5G5B5"/>
        <value value="4" name="R5G6B5"/>
        <value value="5" name="X8R8G8B8"/>
        <value value="6" name="A8R8G8B8"/>
        <value value="7" name="YUY2"/>
        <value value="8" name="UYVY"/>
        <value value="9" name="INDEX8"/>
        <value value="10" name="MONOCHROME"/>
        <value value="15" name="YV12"/>
        <value value="16" name="A8"/>
        <value value="17" name="NV12"/>
        <value value="18" name="NV16"/>
        <value value="19" name="RG16"/>
    </enum>
    <enum name="DE_SWIZZLE" brief="2D swizzle">
        <value value="0" name="ARGB"/>
        <value value="1" name="RGBA"/>
        <value value="2" name="ABGR"/>
        <value value="3" name="BGRA"/>
    </enum>
    <enum name="DE_BLENDMODE" brief="2D blending mode">
        <value value="0" name="ZERO"/>
        <value value="1" name="ONE"/>
        <value value="2" name="NORMAL"/>
        <value value="3" name="INVERSED"/>
        <value value="4" name="COLOR"/>
        <value value="5" name="COLOR_INVERSED"/>
        <value value="6" name="SATURATED_ALPHA"/>
        <value value="7" name="SATURATED_DEST_ALPHA"/>
    </enum>
    <bitset name="DE_COLOR" brief="2D engine color"> <!-- 2D engine uses BGRA everywhere -->
        <bitfield high="7" low="0" name="BLUE"/>
        <bitfield high="15" low="8" name="GREEN"/>
        <bitfield high="23" low="16" name="RED"/>
        <bitfield high="31" low="24" name="ALPHA"/>
    </bitset>
    <enum name="DE_COMPONENT" brief="2D engine color component">
        <value value="0" name="BLUE"/>
        <value value="1" name="GREEN"/>
        <value value="2" name="RED"/>
        <value value="3" name="ALPHA"/>
    </enum>
    <enum name="DE_ROT_MODE" brief="2D rotation mode">
        <value value="0" name="ROT0"/>
        <value value="1" name="FLIP_X"/>
        <value value="2" name="FLIP_Y"/>
        <value value="4" name="ROT90"/>
        <value value="5" name="ROT180"/>
        <value value="6" name="ROT270"/>
    </enum>
    <enum name="DE_MIRROR_MODE" brief="2D mirror mode">
        <value value="0" name="NONE"/>
        <value value="1" name="MIRROR_X"/>
        <value value="2" name="MIRROR_Y"/>
        <value value="3" name="MIRROR_XY"/>
    </enum>
    <enum name="2D_TRANSPARENCY_KIND" inline="yes">
        <value value="0" name="OPAQUE"/>
        <value value="1" name="MASK"/>
        <value value="2" name="KEY"/>
    </enum>
    <enum name="2D_TRANSPARENCY_OVERRIDE" inline="yes">
        <value value="0" name="DEFAULT"/>
        <value value="1" name="USE_ENABLE"/>
        <value value="2" name="USE_DISABLE"/>
    </enum>
    <!-- These register patterns are repeated many times -->
    <bitset name="2D_SRC_STRIDE" inline="yes">
        <bitfield high="17" low="0" name="STRIDE"/>
    </bitset>
    <bitset name="2D_SRC_ROTATION_CONFIG" inline="yes" brief="Source rotation configuration">
        <bitfield high="15" low="0" name="WIDTH"/>
        <bitfield high="16" low="16" name="ROTATION" type="ENABLE_DISABLE" brief="Enable rotation"/>
    </bitset>
    <bitset name="2D_SRC_CONFIG" inline="yes" brief="Source configuration">
        <bitfield high="6" low="6" name="SRC_RELATIVE">
            <value value="0" name="ABSOLUTE"/>
            <value value="1" name="RELATIVE"/>
        </bitfield>
        <bitfield high="7" low="7" name="TILED" type="ENABLE_DISABLE"/>
        <bitfield high="8" low="8" name="LOCATION">
            <value value="0" name="MEMORY" brief="From memory"/>
            <value value="1" name="STREAM" brief="From command stream: set for mono expansion blits or masked blits"/>
        </bitfield>
        <bitfield high="13" low="12" name="PACK">
            <value value="0" name="PACKED8"/>
            <value value="1" name="PACKED16"/>
            <value value="2" name="PACKED32"/>
            <value value="3" name="UNPACKED"/>
        </bitfield>
        <bitfield high="15" low="15" name="MONO_TRANSPARENCY">
            <value value="0" name="BACKGROUND"/>
            <value value="1" name="FOREGROUND"/>
        </bitfield>
        <bitfield high="21" low="20" name="SWIZZLE" type="DE_SWIZZLE"/>
        <bitfield high="28" low="24" name="SOURCE_FORMAT" type="DE_FORMAT"/>
        <bitfield high="29" low="29" name="DISABLE420_L2_CACHE" type="ENABLE_DISABLE"/> <!-- if chip has 420 L2 cache -->
        <bitfield high="31" low="30" name="ENDIAN_CONTROL" type="ENDIAN_MODE"/>
    </bitset>
    <bitset name="2D_SRC_ORIGIN" inline="yes" brief="Source origin">
        <bitfield high="15" low="0" name="X"/>
        <bitfield high="31" low="16" name="Y"/>
    </bitset>
    <bitset name="2D_SRC_SIZE" inline="yes" brief="Source size">
        <bitfield high="15" low="0" name="X"/>
        <bitfield high="31" low="16" name="Y"/>
    </bitset>
    <bitset name="2D_ROP" inline="yes" brief="Raster operation">
        <bitfield high="7" low="0" name="ROP_FG"/>
        <bitfield high="15" low="8" name="ROP_BG"/>
        <bitfield high="21" low="20" name="TYPE">
            <value value="0" name="ROP2_PATTERN"/>
            <value value="1" name="ROP2_SOURCE"/>
            <value value="2" name="ROP3"/>
            <value value="3" name="ROP4"/>
        </bitfield>
    </bitset>
    <bitset name="2D_ALPHA_CONTROL" inline="yes">
        <bitfield high="0" low="0" name="ENABLE">
            <value value="0" name="OFF"/>
            <value value="1" name="ON"/>
        </bitfield>
    </bitset>
    <bitset name="2D_ALPHA_MODES" inline="yes">
        <bitfield high="0" low="0" name="SRC_ALPHA_MODE">
            <value value="0" name="NORMAL"/>
            <value value="1" name="INVERSED"/>
        </bitfield>
        <bitfield high="4" low="4" name="DST_ALPHA_MODE">
            <value value="0" name="NORMAL"/>
            <value value="1" name="INVERSED"/>
        </bitfield>
        <bitfield high="9" low="8" name="GLOBAL_SRC_ALPHA_MODE">
            <value value="0" name="NORMAL"/>
            <value value="1" name="GLOBAL"/>
            <value value="2" name="SCALED"/>
        </bitfield>
        <bitfield high="13" low="12" name="GLOBAL_DST_ALPHA_MODE">
            <value value="0" name="NORMAL"/>
            <value value="1" name="GLOBAL"/>
            <value value="2" name="SCALED"/>
        </bitfield>
        <bitfield high="26" low="24" name="SRC_BLENDING_MODE" type="DE_BLENDMODE"/>
        <bitfield high="27" low="27" name="SRC_ALPHA_FACTOR" type="ENABLE_DISABLE"/>
        <bitfield high="30" low="28" name="DST_BLENDING_MODE" type="DE_BLENDMODE"/>
        <bitfield high="31" low="31" name="DST_ALPHA_FACTOR" type="ENABLE_DISABLE"/>
    </bitset>
    <bitset name="2D_SRC_ROTATION_HEIGHT" inline="yes">
        <bitfield high="15" low="0" name="HEIGHT"/>
    </bitset>
    <bitset name="2D_ROT_ANGLE" masked="yes" inline="yes">
        <bitfield high="2" low="0" name="SRC" type="DE_ROT_MODE"/>
        <bitfield high="5" low="3" name="DST" type="DE_ROT_MODE"/>
        <bitfield high="8" low="8" name="SRC_MASK"/>
        <bitfield high="9" low="9" name="DST_MASK"/>
        <bitfield high="13" low="12" name="SRC_MIRROR" type="DE_MIRROR_MODE"/>
        <bitfield high="15" low="15" name="SRC_MIRROR_MASK"/>
        <bitfield high="17" low="16" name="DST_MIRROR" type="DE_MIRROR_MODE"/>
        <bitfield high="19" low="19" name="DST_MIRROR_MASK"/>
    </bitset>
    <bitset name="2D_COLOR_MULTIPLY_MODES" inline="yes">
        <bitfield high="0" low="0" name="SRC_PREMULTIPLY" type="ENABLE_DISABLE"/>
        <bitfield high="4" low="4" name="DST_PREMULTIPLY" type="ENABLE_DISABLE"/>
        <bitfield high="9" low="8" name="SRC_GLOBAL_PREMULTIPLY">
            <value value="0" name="DISABLE"/>
            <value value="1" name="ALPHA"/>
            <value value="2" name="COLOR"/>
        </bitfield>
        <bitfield high="20" low="20" name="DST_DEMULTIPLY" type="ENABLE_DISABLE"/>
    </bitset>
    <bitset name="2D_PE_TRANSPARENCY" inline="yes"> <!-- XXX support masking for multiple fields for one mask -->
        <bitfield high="1" low="0" name="SOURCE" type="2D_TRANSPARENCY_KIND"/>
        <bitfield high="5" low="4" name="PATTERN" type="2D_TRANSPARENCY_KIND"/>
        <bitfield high="9" low="8" name="DESTINATION" type="2D_TRANSPARENCY_KIND"/>
        <bitfield high="12" low="12" name="TRANSPARENCY_MASK"/>
        <bitfield high="17" low="16" name="USE_SRC_OVERRIDE" type="2D_TRANSPARENCY_OVERRIDE"/>
        <bitfield high="21" low="20" name="USE_PAT_OVERRIDE" type="2D_TRANSPARENCY_OVERRIDE"/>
        <bitfield high="25" low="24" name="USE_DST_OVERRIDE" type="2D_TRANSPARENCY_OVERRIDE"/>
        <bitfield high="28" low="28" name="RESOURCE_OVERRIDE_MASK"/>
        <bitfield high="29" low="29" name="DFB_COLOR_KEY" type="ENABLE_DISABLE"/>
        <bitfield high="31" low="31" name="DFB_COLOR_KEY_MASK"/>
    </bitset>
    <bitset name="2D_PE_CONTROL" masked="yes" inline="yes">
        <bitfield high="0" low="0" name="YUV">
            <value value="0" name="601"/>
            <value value="1" name="709"/>
        </bitfield>
        <bitfield high="3" low="3" name="YUV_MASK"/>
        <bitfield high="4" low="4" name="UV_SWIZZLE">
            <value value="0" name="UV"/>
            <value value="1" name="VU"/>
        </bitfield>
        <bitfield high="7" low="7" name="UV_SWIZZLE_MASK"/>
        <bitfield high="8" low="8" name="YUVRGB" type="ENABLE_DISABLE"/>
        <bitfield high="11" low="11" name="YUVRGB_MASK"/>
    </bitset>
    <bitset name="2D_SRC_EX_CONFIG" masked="yes" inline="yes">
        <bitfield high="0" low="0" name="MULTI_TILED" type="ENABLE_DISABLE"/>
        <bitfield high="3" low="3" name="SUPER_TILED" type="ENABLE_DISABLE"/>
        <bitfield high="8" low="8" name="MINOR_TILED" type="ENABLE_DISABLE"/>
    </bitset>
    <stripe name="DE" brief="2D Drawing Engine">
        <doc>2D drawing engine: conversion, scaling, filtering, rotation, blending of 2D images.</doc>
        <reg32 offset="0x01200" name="SRC_ADDRESS" type="VIVM" brief="Source address"/>
        <reg32 offset="0x01204" name="SRC_STRIDE" brief="Source stride" type="2D_SRC_STRIDE"/>
        <reg32 offset="0x01208" name="SRC_ROTATION_CONFIG" type="2D_SRC_ROTATION_CONFIG"/>
        <reg32 offset="0x0120C" name="SRC_CONFIG" type="2D_SRC_CONFIG"/>
        <reg32 offset="0x01210" name="SRC_ORIGIN" type="2D_SRC_ORIGIN"/>
        <reg32 offset="0x01214" name="SRC_SIZE" type="2D_SRC_SIZE"/>
        <reg32 offset="0x01218" name="SRC_COLOR_BG" type="DE_COLOR"/>
        <reg32 offset="0x0121C" name="SRC_COLOR_FG" type="DE_COLOR"/>
        <reg32 offset="0x01220" name="STRETCH_FACTOR_LOW">
            <bitfield high="30" low="0" name="X"/>
        </reg32>
        <reg32 offset="0x01224" name="STRETCH_FACTOR_HIGH">
            <bitfield high="30" low="0" name="Y"/>
        </reg32>
        <reg32 offset="0x01228" name="DEST_ADDRESS" type="VIVM"/>
        <reg32 offset="0x0122C" name="DEST_STRIDE" type="2D_SRC_STRIDE"/>
        <reg32 offset="0x01230" name="DEST_ROTATION_CONFIG" type="2D_SRC_ROTATION_CONFIG"/>
        <reg32 offset="0x01234" name="DEST_CONFIG">
            <bitfield high="4" low="0" name="FORMAT" type="DE_FORMAT"/>
            <bitfield high="8" low="8" name="TILED" type="ENABLE_DISABLE"/>
            <bitfield high="15" low="12" name="COMMAND">
                <value value="0" name="CLEAR"/>
                <value value="1" name="LINE"/>
                <value value="2" name="BIT_BLT"/>
                <value value="3" name="BIT_BLT_REVERSED"/>
                <value value="4" name="STRETCH_BLT"/>
                <value value="5" name="HOR_FILTER_BLT"/>
                <value value="6" name="VER_FILTER_BLT"/>
                <value value="7" name="ONE_PASS_FILTER_BLT"/>
                <value value="8" name="MULTI_SOURCE_BLT"/>
            </bitfield>
            <bitfield high="17" low="16" name="SWIZZLE" type="DE_SWIZZLE"/>
            <bitfield high="21" low="20" name="ENDIAN_CONTROL" type="ENDIAN_MODE"/>
            <bitfield high="24" low="24" name="GDI_STRE" type="ENABLE_DISABLE"/>
            <bitfield high="25" low="25" name="INTER_TILE_PER_FIX">
                <value value="1" name="DISABLED"/>
                <value value="0" name="ENABLED"/>
            </bitfield>
            <bitfield high="26" low="26" name="MINOR_TILED" type="ENABLE_DISABLE"/>
        </reg32>
        <reg32 offset="0x0125C" name="ROP" type="2D_ROP"/>
        <reg32 offset="0x01260" name="CLIP_TOP_LEFT">
            <bitfield high="14" low="0" name="X"/>
            <bitfield high="30" low="16" name="Y"/>
        </reg32>
        <reg32 offset="0x01264" name="CLIP_BOTTOM_RIGHT">
            <bitfield high="14" low="0" name="X"/>
            <bitfield high="30" low="16" name="Y"/>
        </reg32>
        <reg32 offset="0x0126C" name="CONFIG">
            <bitfield high="0" low="0" name="MIRROR_BLT_ENABLE">
                <value value="0" name="OFF"/>
                <value value="1" name="ON"/>
            </bitfield>
            <bitfield high="5" low="4" name="MIRROR_BLT_MODE">
                <value value="0" name="NORMAL"/>
                <value value="1" name="HMIRROR"/>
                <value value="2" name="VMIRROR"/>
                <value value="3" name="FULL_MIRROR"/>
            </bitfield>
            <bitfield high="18" low="16" name="SOURCE_SELECT"/>
            <bitfield high="21" low="20" name="DESTINATION_SELECT"/>
        </reg32>
        <reg32 offset="0x01278" name="SRC_ORIGIN_FRACTION">
            <bitfield high="15" low="0" name="X"/>
            <bitfield high="31" low="16" name="Y"/>
        </reg32>
        <reg32 offset="0x0127C" name="ALPHA_CONTROL" type="2D_ALPHA_CONTROL"/>
        <reg32 offset="0x01280" name="ALPHA_MODES" type="2D_ALPHA_MODES"/>
        <reg32 offset="0x01284" name="UPLANE_ADDRESS" type="VIVM"/>
        <reg32 offset="0x01288" name="UPLANE_STRIDE" type="2D_SRC_STRIDE"/>
        <reg32 offset="0x0128C" name="VPLANE_ADDRESS" type="VIVM"/>
        <reg32 offset="0x01290" name="VPLANE_STRIDE" type="2D_SRC_STRIDE"/>
        <reg32 offset="0x01294" name="VR_CONFIG" masked="yes">
            <bitfield high="1" low="0" name="START">
                <value value="0" name="HORIZONTAL_BLIT"/>
                <value value="1" name="VERTICAL_BLIT"/>
                <value value="2" name="ONE_PASS_BLIT"/>
            </bitfield>
            <bitfield high="3" low="3" name="START_MASK"/>
        </reg32>
        <reg32 offset="0x01298" name="VR_SOURCE_IMAGE_LOW">
            <bitfield high="15" low="0" name="LEFT"/>
            <bitfield high="31" low="16" name="TOP"/>
        </reg32>
        <reg32 offset="0x0129C" name="VR_SOURCE_IMAGE_HIGH">
            <bitfield high="15" low="0" name="RIGHT"/>
            <bitfield high="31" low="16" name="BOTTOM"/>
        </reg32>
        <reg32 offset="0x012A0" name="VR_SOURCE_ORIGIN_LOW">
            <bitfield high="31" low="0" name="X"/>
        </reg32>
        <reg32 offset="0x012A4" name="VR_SOURCE_ORIGIN_HIGH">
            <bitfield high="31" low="0" name="Y"/>
        </reg32>
        <reg32 offset="0x012A8" name="VR_TARGET_WINDOW_LOW">
            <bitfield high="15" low="0" name="LEFT"/>
            <bitfield high="31" low="16" name="TOP"/>
        </reg32>
        <reg32 offset="0x012AC" name="VR_TARGET_WINDOW_HIGH">
            <bitfield high="15" low="0" name="RIGHT"/>
            <bitfield high="31" low="16" name="BOTTOM"/>
        </reg32>
        <reg32 offset="0x012B0" name="PE_CONFIG" masked="yes">
            <bitfield high="1" low="0" name="DESTINATION_FETCH">
                <value value="0" name="DISABLE"/>
                <value value="1" name="DEFAULT"/>
                <value value="2" name="ALWAYS"/>
            </bitfield>
            <bitfield high="3" low="3" name="DESTINATION_FETCH_MASK"/>
        </reg32>
        <reg32 offset="0x012B4" name="DST_ROTATION_HEIGHT">
            <bitfield high="15" low="0" name="HEIGHT"/>
        </reg32>
        <reg32 offset="0x012B8" name="SRC_ROTATION_HEIGHT" type="2D_SRC_ROTATION_HEIGHT"/>
        <reg32 offset="0x012BC" name="ROT_ANGLE" type="2D_ROT_ANGLE"/>
        <reg32 offset="0x012C0" name="CLEAR_PIXEL_VALUE32" type="DE_COLOR"/>
        <reg32 offset="0x012C4" name="DEST_COLOR_KEY" type="DE_COLOR"/>
        <reg32 offset="0x012C8" name="GLOBAL_SRC_COLOR" type="DE_COLOR"/>
        <reg32 offset="0x012CC" name="GLOBAL_DEST_COLOR" type="DE_COLOR"/>
        <reg32 offset="0x012D0" name="COLOR_MULTIPLY_MODES" type="2D_COLOR_MULTIPLY_MODES"/>
        <reg32 offset="0x012D4" name="PE_TRANSPARENCY" type="2D_PE_TRANSPARENCY"/>
        <reg32 offset="0x012D8" name="PE_CONTROL" type="2D_PE_CONTROL"/>
        <reg32 offset="0x012DC" name="SRC_COLOR_KEY_HIGH" type="DE_COLOR"/>
        <reg32 offset="0x012E0" name="DEST_COLOR_KEY_HIGH" type="DE_COLOR"/>
        <reg32 offset="0x012E4" name="VR_CONFIG_EX" masked="yes">
            <bitfield high="1" low="0" name="VERTICAL_LINE_WIDTH">
                <value value="0" name="AUTO"/>
                <value value="1" name="PIXELS16"/>
                <value value="2" name="PIXELS32"/>
            </bitfield>
            <bitfield high="3" low="3" name="VERTICAL_LINE_WIDTH_MASK"/>
            <bitfield high="7" low="4" name="FILTER_TAP"/>
            <bitfield high="8" low="8" name="FILTER_TAP_MASK"/>
        </reg32>
        <reg32 offset="0x012E8" name="PE_DITHER_LOW">
            <bitfield high="3" low="0" name="PIXEL_X0_Y0"/>
            <bitfield high="7" low="4" name="PIXEL_X1_Y0"/>
            <bitfield high="11" low="8" name="PIXEL_X2_Y0"/>
            <bitfield high="15" low="12" name="PIXEL_X3_Y0"/>
            <bitfield high="19" low="16" name="PIXEL_X0_Y1"/>
            <bitfield high="23" low="20" name="PIXEL_X1_Y1"/>
            <bitfield high="27" low="24" name="PIXEL_X2_Y1"/>
            <bitfield high="31" low="28" name="PIXEL_X3_Y1"/>
        </reg32>
        <reg32 offset="0x012EC" name="PE_DITHER_HIGH">
            <bitfield high="3" low="0" name="PIXEL_X0_Y2"/>
            <bitfield high="7" low="4" name="PIXEL_X1_Y2"/>
            <bitfield high="11" low="8" name="PIXEL_X2_Y2"/>
            <bitfield high="15" low="12" name="PIXEL_X3_Y2"/>
            <bitfield high="19" low="16" name="PIXEL_X0_Y3"/>
            <bitfield high="23" low="20" name="PIXEL_X1_Y3"/>
            <bitfield high="27" low="24" name="PIXEL_X2_Y3"/>
            <bitfield high="31" low="28" name="PIXEL_X3_Y3"/>
        </reg32>
        <reg32 offset="0x012F0" name="BW_CONFIG" masked="yes">
            <bitfield high="0" low="0" name="BLOCK_CONFIG">
                <value value="0" name="AUTO"/>
                <value value="1" name="CUSTOMIZE"/>
            </bitfield>
            <bitfield high="3" low="3" name="BLOCK_CONFIG_MASK"/>
            <bitfield high="4" low="4" name="BLOCK_WALK_DIRECTION">
                <value value="0" name="RIGHT_BOTTOM"/>
                <value value="1" name="BOTTOM_RIGHT"/>
            </bitfield>
            <bitfield high="7" low="7" name="BLOCK_WALK_DIRECTION_MASK"/>
            <bitfield high="8" low="8" name="TILE_WALK_DIRECTION">
                <value value="0" name="RIGHT_BOTTOM"/>
                <value value="1" name="BOTTOM_RIGHT"/>
            </bitfield>
            <bitfield high="11" low="11" name="TILE_WALK_DIRECTION_MASK"/>
            <bitfield high="12" low="12" name="PIXEL_WALK_DIRECTION">
                <value value="0" name="RIGHT_BOTTOM"/>
                <value value="1" name="BOTTOM_RIGHT"/>
            </bitfield>
            <bitfield high="15" low="15" name="PIXEL_WALK_DIRECTION_MASK"/>
        </reg32>
        <reg32 offset="0x012F4" name="BW_BLOCK_SIZE">
            <bitfield high="15" low="0" name="WIDTH"/>
            <bitfield high="31" low="16" name="HEIGHT"/>
        </reg32>
        <reg32 offset="0x012F8" name="BW_TILE_SIZE">
            <bitfield high="15" low="0" name="WIDTH"/>
            <bitfield high="31" low="16" name="HEIGHT"/>
        </reg32>
        <reg32 offset="0x012FC" name="BW_BLOCK_MASK">
            <bitfield high="15" low="0" name="HORIZONTAL"/>
            <bitfield high="31" low="16" name="VERTICAL"/>
        </reg32>
        <reg32 offset="0x01300" name="SRC_EX_CONFIG">
            <bitfield high="0" low="0" name="MULTI_TILED" type="ENABLE_DISABLE"/>
            <bitfield high="3" low="3" name="SUPER_TILED" type="ENABLE_DISABLE"/>
            <bitfield high="8" low="8" name="MINOR_TILED" type="ENABLE_DISABLE"/>
        </reg32>
        <reg32 offset="0x01304" name="SRC_EX_ADDRESS" type="VIVM"/>
        <reg32 offset="0x01308" name="DE_MULTI_SOURCE">
            <bitfield high="2" low="0" name="MAX_SOURCE"/>
            <bitfield high="10" low="8" name="HORIZONTAL_BLOCK">
                <value value="0" name="PIXEL16"/>
                <value value="1" name="PIXEL32"/>
                <value value="2" name="PIXEL64"/>
                <value value="3" name="PIXEL128"/>
                <value value="4" name="PIXEL256"/>
                <value value="5" name="PIXEL512"/>
            </bitfield>
            <bitfield high="18" low="16" name="VERTICAL_BLOCK">
                <value value="0" name="LINE1"/>
                <value value="1" name="LINE2"/>
                <value value="2" name="LINE4"/>
                <value value="3" name="LINE8"/>
                <value value="4" name="LINE16"/>
                <value value="5" name="LINE32"/>
                <value value="6" name="LINE64"/>
                <value value="7" name="LINE128"/>
            </bitfield>
        </reg32>
        <reg32 offset="0x0130C" name="DEYUV_CONVERSION">
            <bitfield high="1" low="0" name="ENABLE">
                <value value="0" name="OFF"/>
                <value value="1" name="PLANE1"/>
                <value value="2" name="PLANE2"/>
                <value value="3" name="PLANE3"/>
            </bitfield>
            <bitfield high="3" low="2" name="PLANE1_COUNT" type="uint"/>
            <bitfield high="5" low="4" name="PLANE2_COUNT" type="uint"/>
            <bitfield high="7" low="6" name="PLANE3_COUNT" type="uint"/>
            <bitfield high="9" low="8" name="PLANE1_SWIZZLE_B" type="DE_COMPONENT"/>
            <bitfield high="11" low="10" name="PLANE1_SWIZZLE_G" type="DE_COMPONENT"/>
            <bitfield high="13" low="12" name="PLANE1_SWIZZLE_R" type="DE_COMPONENT"/>
            <bitfield high="15" low="14" name="PLANE1_SWIZZLE_A" type="DE_COMPONENT"/>
            <bitfield high="17" low="16" name="PLANE2_SWIZZLE_B" type="DE_COMPONENT"/>
            <bitfield high="19" low="18" name="PLANE2_SWIZZLE_G" type="DE_COMPONENT"/>
            <bitfield high="21" low="20" name="PLANE2_SWIZZLE_R" type="DE_COMPONENT"/>
            <bitfield high="23" low="22" name="PLANE2_SWIZZLE_A" type="DE_COMPONENT"/>
            <bitfield high="25" low="24" name="PLANE3_SWIZZLE_B" type="DE_COMPONENT"/>
            <bitfield high="27" low="26" name="PLANE3_SWIZZLE_G" type="DE_COMPONENT"/>
            <bitfield high="29" low="28" name="PLANE3_SWIZZLE_R" type="DE_COMPONENT"/>
            <bitfield high="31" low="30" name="PLANE3_SWIZZLE_A" type="DE_COMPONENT"/>
        </reg32>
        <reg32 offset="0x01310" name="DE_PLANE2_ADDRESS" type="VIVM"/>
        <reg32 offset="0x01314" name="DE_PLANE2_STRIDE" type="2D_SRC_STRIDE"/>
        <reg32 offset="0x01318" name="DE_PLANE3_ADDRESS" type="VIVM"/>
        <reg32 offset="0x0131C" name="DE_PLANE3_STRIDE" type="2D_SRC_STRIDE"/>
        <reg32 offset="0x01320" name="DE_STALL_DE">
            <bitfield high="0" low="0" name="ENABLE" type="ENABLE_DISABLE"/>
        </reg32>
        <reg32 offset="0x01800" name="FILTER_KERNEL" length="128">
            <bitfield high="15" low="0" name="COEFFICIENT0"/>
            <bitfield high="31" low="16" name="COEFFICIENT1"/>
        </reg32>
        <reg32 offset="0x01C00" name="INDEX_COLOR_TABLE" length="256" type="DE_COLOR"/>
        <reg32 offset="0x02800" name="HORI_FILTER_KERNEL" length="128">
            <bitfield high="15" low="0" name="COEFFICIENT0"/>
            <bitfield high="31" low="16" name="COEFFICIENT1"/>
        </reg32>
        <reg32 offset="0x02A00" name="VERTI_FILTER_KERNEL" length="128">
            <bitfield high="15" low="0" name="COEFFICIENT0"/>
            <bitfield high="31" low="16" name="COEFFICIENT1"/>
        </reg32>
        <reg32 offset="0x03400" name="INDEX_COLOR_TABLE32" length="256" type="DE_COLOR"/>
        <!-- Multi-source blend -->
        <stripe name="BLOCK4">
            <reg32 offset="0x12800" name="SRC_ADDRESS" length="4" type="VIVM"/>
            <reg32 offset="0x12810" name="SRC_STRIDE" length="4" type="2D_SRC_STRIDE"/>
            <reg32 offset="0x12820" name="SRC_ROTATION_CONFIG" length="4" type="2D_SRC_ROTATION_CONFIG"/>
            <reg32 offset="0x12830" name="SRC_CONFIG" length="4" type="2D_SRC_CONFIG"/>
            <reg32 offset="0x12840" name="SRC_ORIGIN" length="4" type="2D_SRC_ORIGIN"/>
            <reg32 offset="0x12850" name="SRC_SIZE" length="4" type="2D_SRC_SIZE"/>
            <reg32 offset="0x12860" name="SRC_COLOR_BG" length="4" type="DE_COLOR"/>
            <reg32 offset="0x12870" name="ROP" length="4" type="2D_ROP"/>
            <reg32 offset="0x12880" name="ALPHA_CONTROL" length="4" type="2D_ALPHA_CONTROL"/>
            <reg32 offset="0x12890" name="ALPHA_MODES" length="4" type="2D_ALPHA_MODES"/>
            <reg32 offset="0x128A0" name="ADDRESS_U" length="4" type="VIVM"/>
            <reg32 offset="0x128B0" name="STRIDE_U" length="4" type="2D_SRC_STRIDE"/>
            <reg32 offset="0x128C0" name="ADDRESS_V" length="4" type="VIVM"/>
            <reg32 offset="0x128D0" name="STRIDE_V" length="4" type="2D_SRC_STRIDE"/>
            <reg32 offset="0x128E0" name="SRC_ROTATION_HEIGHT" length="4" type="2D_SRC_ROTATION_HEIGHT"/>
            <reg32 offset="0x128F0" name="ROT_ANGLE" length="4" type="2D_ROT_ANGLE"/>
            <reg32 offset="0x12900" name="GLOBAL_SRC_COLOR" length="4" type="DE_COLOR"/>
            <reg32 offset="0x12910" name="GLOBAL_DEST_COLOR" length="4" type="DE_COLOR"/>
            <reg32 offset="0x12920" name="COLOR_MULTIPLY_MODES" length="4" type="2D_COLOR_MULTIPLY_MODES"/>
            <reg32 offset="0x12930" name="TRANSPARENCY" length="4" type="2D_PE_TRANSPARENCY"/>
            <reg32 offset="0x12940" name="CONTROL" length="4" type="2D_PE_CONTROL"/>
            <reg32 offset="0x12950" name="SRC_COLOR_KEY_HIGH" length="4" type="DE_COLOR"/>
            <reg32 offset="0x12960" name="SRC_EX_CONFIG" length="4" type="2D_SRC_EX_CONFIG"/>
            <reg32 offset="0x12970" name="SRC_EX_ADDRESS" length="4" type="VIVM"/>
        </stripe>
        <stripe name="BLOCK8">
            <reg32 offset="0x12A00" name="SRC_ADDRESS" length="8" type="VIVM"/>
            <reg32 offset="0x12A20" name="SRC_STRIDE" length="8" type="2D_SRC_STRIDE"/>
            <reg32 offset="0x12A40" name="SRC_ROTATION_CONFIG" length="8" type="2D_SRC_ROTATION_CONFIG"/>
            <reg32 offset="0x12A60" name="SRC_CONFIG" length="8" type="2D_SRC_CONFIG"/>
            <reg32 offset="0x12A80" name="SRC_ORIGIN" length="8" type="2D_SRC_ORIGIN"/>
            <reg32 offset="0x12AA0" name="SRC_SIZE" length="8" type="2D_SRC_SIZE"/>
            <reg32 offset="0x12AC0" name="SRC_COLOR_BG" length="8" type="DE_COLOR"/>
            <reg32 offset="0x12AE0" name="ROP" length="8" type="2D_ROP"/>
            <reg32 offset="0x12B00" name="ALPHA_CONTROL" length="8" type="2D_ALPHA_CONTROL"/>
            <reg32 offset="0x12B20" name="ALPHA_MODES" length="8" type="2D_ALPHA_MODES"/>
            <reg32 offset="0x12B40" name="ADDRESS_U" length="8" type="VIVM"/>
            <reg32 offset="0x12B60" name="STRIDE_U" length="8" type="2D_SRC_STRIDE"/>
            <reg32 offset="0x12B80" name="ADDRESS_V" length="8" type="VIVM"/>
            <reg32 offset="0x12BA0" name="STRIDE_V" length="8" type="2D_SRC_STRIDE"/>
            <reg32 offset="0x12BC0" name="SRC_ROTATION_HEIGHT" length="8" type="2D_SRC_ROTATION_HEIGHT"/>
            <reg32 offset="0x12BE0" name="ROT_ANGLE" length="8" type="2D_ROT_ANGLE"/>
            <reg32 offset="0x12C00" name="GLOBAL_SRC_COLOR" length="8" type="DE_COLOR"/>
            <reg32 offset="0x12C20" name="GLOBAL_DEST_COLOR" length="8" type="DE_COLOR"/>
            <reg32 offset="0x12C40" name="COLOR_MULTIPLY_MODES" length="8" type="2D_COLOR_MULTIPLY_MODES"/>
            <reg32 offset="0x12C60" name="TRANSPARENCY" length="8" type="2D_PE_TRANSPARENCY"/>
            <reg32 offset="0x12C80" name="CONTROL" length="8" type="2D_PE_CONTROL"/>
            <reg32 offset="0x12CA0" name="SRC_COLOR_KEY_HIGH" length="8" type="DE_COLOR"/>
            <reg32 offset="0x12CC0" name="SRC_EX_CONFIG" length="8" type="2D_SRC_EX_CONFIG"/>
            <reg32 offset="0x12CE0" name="SRC_EX_ADDRESS" length="8" type="VIVM"/>
        </stripe>
    </stripe>

    <!-- PIPE_3D states -->
    <stripe name="VS" brief="Vertex shader states">
        <doc>The vertex shader to use is configured here.</doc>
        <reg32 offset="0x00800" name="END_PC" value="0x00000000" brief="End instruction number">
            <doc>index of last instruction + 1</doc>
        </reg32>
        <reg32 offset="0x00804" name="OUTPUT_COUNT" value="0x00000000" type="uint" brief="Number of VS outputs"/>
        <reg32 offset="0x00808" name="INPUT_COUNT" value="0x00000000">
            <bitfield high="3" low="0" name="COUNT" type="uint" brief="Number of VS inputs"/>
            <bitfield high="12" low="8" name="COUNT8" type="uint"/>
        </reg32>
        <reg32 offset="0x0080C" name="TEMP_REGISTER_CONTROL" brief="Temporary register control" value="0x00000000">
            <bitfield high="5" low="0" name="NUM_TEMPS" type="uint" brief="Number of temporary registers"/>
        </reg32>
        <reg32 offset="0x00810" name="OUTPUT" value="0x00000000" length="4" stride="4">
            <bitfield high="15" low="0" name="UNK0" type="uint"/>
            <bitfield high="31" low="16" name="UNK16" type="uint"/>
        </reg32>
        <reg32 offset="0x00820" name="INPUT" value="0x00000000" length="4" stride="4"/>
        <reg32 offset="0x00830" name="LOAD_BALANCING" value="0x00000000"/>
        <reg32 offset="0x00834" name="PERF_COUNTER" brief="Performance counter control"/>
        <reg32 offset="0x00838" name="START_PC" value="0x00000000"/>
        <reg32 offset="0x00850" name="UNK00850" value="0x000003e8"/>
        <reg32 offset="0x00854" name="UNK00854" value="0x00000100"/>
        <reg32 offset="0x00858" name="UNK00858" value="0x00001005"/>
        <reg32 offset="0x04000" name="INST_MEM" value="0x00000000" length="1024" stride="4"> <!-- instructionCount <= 256 -->
            <!-- length="instructionCount * 4" -->
        </reg32>
        <reg32 offset="0x05000" name="UNIFORMS" value="0x00000000" length="1024" stride="4">
            <!-- length="vertexUniforms * 4" -->
        </reg32>
    </stripe>

    <stripe name="THREAD_WALKER" brief="Thread walker states">
        <doc>The thread walker drives shaders in a predefined grid for GPGPU computing (OpenCL).
        These states are not used for normal rendering.</doc>
        <reg32 offset="0x00900" name="UNK00900" value="0x00000000"/>
        <reg32 offset="0x00904" name="UNK00904" value="0x00000000"/>
        <reg32 offset="0x00908" name="UNK00908" value="0x00000000"/>
        <reg32 offset="0x0090C" name="UNK0090C" value="0x00000000"/>
        <reg32 offset="0x00910" name="UNK00910" value="0x00000000"/>
        <reg32 offset="0x00914" name="UNK00914" value="0x00000000"/>
        <reg32 offset="0x00918" name="UNK00918" value="0x00000000"/>
        <reg32 offset="0x0091C" name="UNK0091C" value="0x00000000"/>
        <reg32 offset="0x00920" name="KICKER" brief="Start thread walker">
            <doc>Write some value to this register to kick off thread walker</doc>
        </reg32>
        <reg32 offset="0x00924" name="UNK00924" value="0x00000000"/>
    </stripe>
    
    <stripe name="PA" brief="Primitive assembly states">
        <doc>Primitive assembly assembles primitives (tris, quads, lines, points etc) from vertices for 3D rendering.
            Viewport scaling, line width and point size is configured here.</doc>
        <reg32 offset="0x00A00" name="VIEWPORT_SCALE_X" value="0x00000000" type="fixedp"/>
        <reg32 offset="0x00A04" name="VIEWPORT_SCALE_Y" value="0x00000000" type="fixedp"/>
        <reg32 offset="0x00A08" name="VIEWPORT_SCALE_Z" value="0x00000000" type="float"/>
        <reg32 offset="0x00A0C" name="VIEWPORT_OFFSET_X" value="0x00000000" type="fixedp"/>
        <reg32 offset="0x00A10" name="VIEWPORT_OFFSET_Y" value="0x00000000" type="fixedp"/>
        <reg32 offset="0x00A14" name="VIEWPORT_OFFSET_Z" value="0x00000000" type="float"/>
        <reg32 offset="0x00A18" name="LINE_WIDTH" value="0x00000000"/>
        <reg32 offset="0x00A1C" name="POINT_SIZE" value="0x00000000"/>
        <reg32 offset="0x00A28" name="SYSTEM_MODE" value="0x00000000"> <!-- D3D/OpenGL switch -->
            <doc>0x11 for OpenGL</doc>
        </reg32>
        <reg32 offset="0x00A2C" name="W_CLIP_LIMIT" value="0x00000000"/>
        <reg32 offset="0x00A30" name="ATTRIBUTE_ELEMENT_COUNT" value="0x00000000">
            <bitfield high="7" low="0" name="UNK0"/>
            <bitfield high="15" low="8" name="COUNT"/>
        </reg32>
        <reg32 offset="0x00A34" name="CONFIG" value="0x00000000" brief="Primitive assembly state flags" masked="yes">
            <doc>
            These can be set either per group of bits, or all at once, by using masking flags.
            Each group of state flags has a masking flag that prevents overwriting the flags in that group.
            </doc>
            <bitfield pos="2" name="POINT_SIZE_ENABLE" brief="Enable point size"/>
            <bitfield pos="3" name="POINT_SIZE_ENABLE_MASK"/>
            <bitfield pos="4" name="POINT_SPRITE_ENABLE" brief="Enable point sprite"/>
            <bitfield pos="5" name="POINT_SPRITE_ENABLE_MASK"/>
            <bitfield high="9" low="8" name="CULL_FACE_MODE">
                <value value="0" name="OFF" brief="Disable face culling"/>
                <value value="1" name="CW" brief="Orientation of front-facing polygons is clockwise"/>
                <value value="2" name="CCW" brief="Orientation of front-facing polygons is counter-clockwise"/>
            </bitfield>
            <bitfield pos="10" name="CULL_FACE_MODE_MASK"/>
            <bitfield high="13" low="12" name="FILL_MODE">
                <value value="0" name="POINT"/>
                <value value="1" name="WIREFRAME"/>
                <value value="2" name="SOLID"/>
            </bitfield>
            <bitfield pos="14" name="FILL_MODE_MASK"/>
            <bitfield high="17" low="16" name="SHADE_MODEL">
                <value value="0" name="FLAT" brief="Flat shading"/>
                <value value="1" name="SMOOTH" brief="Gouraud shading"/>
            </bitfield>
            <bitfield pos="18" name="SHADE_MODEL_MASK"/>
            <bitfield pos="22" name="UNK22"/>
            <bitfield pos="23" name="UNK22_MASK"/>
        </reg32>
        <reg32 offset="0x00A38" name="LINE_UNK00A38" value="0x00000000"/>
        <reg32 offset="0x00A3C" name="LINE_UNK00A3C" value="0x00000000"/>
        <reg32 offset="0x00A40" name="SHADER_ATTRIBUTES" value="0x00000000" length="10" stride="4">
            <doc>One flags word per shader attribute</doc>
            <bitfield high="7" low="0" name="UNK0"/>
            <bitfield high="15" low="8" name="UNK8"/>
        </reg32>
        <reg32 offset="0x00A80" name="VIEWPORT_UNK00A80" value="0x00000000"/>
        <reg32 offset="0x00A84" name="VIEWPORT_UNK00A84" value="0x00000000"/>
    </stripe>
   
    <stripe name="SE" brief="Setup Engine states">
        <doc>The setup engine takes care of scissor, clipping, and depth scale.</doc>
        <reg32 offset="0x00C00" name="SCISSOR_LEFT" value="0x00000000" type="fixedp"/>
        <reg32 offset="0x00C04" name="SCISSOR_TOP" value="0x00000000" type="fixedp"/>
        <reg32 offset="0x00C08" name="SCISSOR_RIGHT" value="0x45000000" type="fixedp"/>
        <reg32 offset="0x00C0C" name="SCISSOR_BOTTOM" value="0x45000000" type="fixedp"/>
        <reg32 offset="0x00C10" name="DEPTH_SCALE" value="0x00000000"/>
        <reg32 offset="0x00C14" name="DEPTH_BIAS" value="0x00000000"/>
        <reg32 offset="0x00C18" name="LAST_PIXEL_ENABLE" value="0x00000000"><doc>Always disabled for OpenGL</doc></reg32>
        <reg32 offset="0x00C1C" name="UNK00C1C" value="0x42000000"/>
        <reg32 offset="0x00C20" name="CLIP_RIGHT" value="0x00000000" type="fixedp"/>
        <reg32 offset="0x00C24" name="CLIP_BOTTOM" value="0x00000000" type="fixedp"/>
    </stripe>
    
    <stripe name="RA" brief="Raster states">
        <doc>Configuration for the rasterizer. This mainly controls multisampling.</doc>
        <reg32 offset="0x00E00" name="CONTROL" value="0x00000001">
            <bitfield pos="0" name="UNK0"/>
            <bitfield pos="1" name="UNK1"><doc>Set based on number of PS varyings</doc></bitfield>
        </reg32>
        <reg32 offset="0x00E04" name="MULTISAMPLE_UNK00E04" value="0x00000000"/>
        <reg32 offset="0x00E08" name="DEPTH_UNK00E08" value="0x00000031"/>
        <reg32 offset="0x00E10" name="MULTISAMPLE_UNK00E10" value="0x00000000" length="4" stride="4"/>
        <reg32 offset="0x00E40" name="CENTROID_TABLE" value="0x00000000" length="16" stride="4"/>
    </stripe>
  
    <stripe name="PS" brief="Pixel Shader states">
        <doc>The Pixel (Fragment) shader to use is configured here</doc>
        <reg32 offset="0x01000" name="END_PC" value="0x00000000"/>
        <reg32 offset="0x01004" name="OUTPUT_REG" value="0x00000000" brief="Register that will contain output color"/>
        <reg32 offset="0x01008" name="INPUT_COUNT" value="0x00000000">
            <bitfield high="3" low="0" name="COUNT" type="uint" brief="Number of PS inputs"/>
            <bitfield high="12" low="8" name="UNK8" type="uint"/>
        </reg32>
        <reg32 offset="0x0100C" name="TEMP_REGISTER_CONTROL" brief="Temporary register control" value="0x00000000">
            <bitfield high="5" low="0" name="NUM_TEMPS" type="uint" brief="Number of temporary registers"/>
        </reg32>
        <reg32 offset="0x01010" name="CONTROL" value="0x00000000">
            <bitfield pos="0" name="BYPASS"/>
            <bitfield pos="1" name="UNK1"/>
        </reg32>
        <reg32 offset="0x01014" name="PERF_COUNTER" brief="Performance counter control"/>
        <reg32 offset="0x01018" name="START_PC" value="0x01000000"/>
        <reg32 offset="0x06000" name="INST_MEM" value="0x00000000" length="1024" stride="4"> <!-- instructionCount <= 256 -->
            <!-- length="instructionCount * 4" -->
        </reg32>
        <reg32 offset="0x07000" name="UNIFORMS" value="0x00000000" length="1024" stride="4">
            <!-- length="fragmentUniforms * 4" -->
        </reg32>
    </stripe>
    
    <stripe name="PE" brief="Pixel Engine states">
        <doc>The Pixel Engine takes care of fragment (pixel) processing.

            Some flags can be set either per group of bits, or all at once, by using masking flags.
            Each group of state flags has a masking flag that when set prevents overwriting the flags in that group.
            These will be called FOO_MASK if the state to be masked is called FOO.
        </doc>
        <reg32 offset="0x01400" name="DEPTH_CONFIG" value="0x00000000" masked="yes">
            <bitfield high="1" low="0" name="DEPTH_MODE">
                <value value="0" name="NONE"/>
                <value value="1" name="Z" brief="Z-buffer"/>
                <value value="2" name="W" brief="W-buffer"/>
            </bitfield>
            <bitfield pos="3" name="DEPTH_MODE_MASK"/>
            <bitfield pos="4" name="DEPTH_FORMAT">
                <value value="0" name="D16"/>
                <value value="1" name="D24S8"/>
            </bitfield>
            <bitfield pos="5" name="DEPTH_FORMAT_MASK"/>
            <bitfield high="10" low="8" name="DEPTH_FUNC" type="COMPARE_FUNC" brief="glDepthFunc"/>
            <bitfield pos="11" name="DEPTH_FUNC_MASK"/>
            <bitfield pos="12" name="WRITE_ENABLE" brief="glDepthMask"/>
            <bitfield pos="13" name="WRITE_ENABLE_MASK"/>
            <bitfield pos="16" name="EARLY_Z"/>
            <bitfield pos="17" name="EARLY_Z_MASK"/>
            <bitfield pos="20" name="ONLY_DEPTH"/>
            <bitfield pos="21" name="ONLY_DEPTH_MASK"/>
            <bitfield pos="26" name="SUPER_TILED"/>
            <bitfield pos="27" name="SUPER_TILED_MASK"/>
        </reg32>
        <reg32 offset="0x01404" name="DEPTH_NEAR" value="0x00000000" type="float"/>
        <reg32 offset="0x01408" name="DEPTH_FAR" value="0x00000000" type="float"/>
        <reg32 offset="0x0140C" name="DEPTH_NORMALIZE" value="0x00000000" type="float"/>
        <reg32 offset="0x01410" name="DEPTH_ADDR" value="0x00000000" type="VIVM"/> <!-- pixelPipes == 1 -->
        <reg32 offset="0x01414" name="DEPTH_STRIDE" value="0x00000000"/>
        <reg32 offset="0x01418" name="STENCIL_OP" value="0x00000000" masked="yes">
            <bitfield high="2" low="0" name="FUNC_FRONT" type="COMPARE_FUNC" brief="glStencilFunc func (GL_FRONT)"/>
            <bitfield pos="3" name="FUNC_FRONT_MASK"/>
            <bitfield high="6" low="4" name="PASS_FRONT" type="STENCIL_OP" brief="glStencilOp dppass (GL_FRONT)"/>
            <bitfield pos="7" name="PASS_FRONT_MASK"/>
            <bitfield high="10" low="8" name="FAIL_FRONT" type="STENCIL_OP" brief="glStencilOp sfail (GL_FRONT)"/>
            <bitfield pos="11" name="FAIL_FRONT_MASK"/>
            <bitfield high="14" low="12" name="DEPTH_FAIL_FRONT" type="STENCIL_OP" brief="glStencilOp dpfail (GL_FRONT)"/>
            <bitfield pos="15" name="DEPTH_FAIL_FRONT_MASK"/>
            <bitfield high="18" low="16" name="FUNC_BACK" type="COMPARE_FUNC" brief="glStencilFunc func (GL_BACK)"/>
            <bitfield pos="19" name="FUNC_BACK_MASK"/>
            <bitfield high="22" low="20" name="PASS_BACK" type="STENCIL_OP" brief="glStencilOp dppass (GL_BACK)"/>
            <bitfield pos="23" name="PASS_BACK_MASK"/>
            <bitfield high="26" low="24" name="FAIL_BACK" type="STENCIL_OP" brief="glStencilOp sfail (GL_BACK)"/>
            <bitfield pos="27" name="FAIL_BACK_MASK"/>
            <bitfield high="30" low="28" name="DEPTH_FAIL_BACK" type="STENCIL_OP" brief="glStencilOp dpfail (GL_BACK)"/>
            <bitfield pos="31" name="DEPTH_FAIL_BACK_MASK"/>
        </reg32>
        <reg32 offset="0x0141C" name="STENCIL_CONFIG" value="0x00000000" masked="yes">
            <doc>Warning: confusing terminology. WRITE_MASK is the stencil write mask,
                the state bits can be masked with WRITE_MASK_MASK.</doc>
            <bitfield high="1" low="0" name="MODE">
                <value value="0" name="DISABLED" brief="Stencil disabled"/>
                <value value="1" name="ONE_SIDED" brief="Stencil enabled in one-sided mode"/>
                <value value="2" name="TWO_SIDED" brief="Stencil enabled in two-sided mode"/>
            </bitfield>
            <bitfield pos="4" name="MODE_MASK"/>
            <bitfield pos="5" name="REF_FRONT_MASK"/>
            <bitfield pos="6" name="MASK_FRONT_MASK"/>
            <bitfield pos="7" name="WRITE_MASK_MASK"/>
            <bitfield high="15" low="8" name="REF_FRONT" brief="glStencilFunc ref (GL_FRONT)">
                <doc>REF_BACK is in register STENCIL_CONFIG_EXT.</doc>
            </bitfield>
            <bitfield high="23" low="16" name="MASK_FRONT" brief="glStencilFunc mask">
                <doc>XXX there appears to be no specific MASK_BACK, this state is used for both front and back?</doc>
            </bitfield>
            <bitfield high="31" low="24" name="WRITE_MASK" brief="glStencilMask"/>
        </reg32>
        <reg32 offset="0x01420" name="ALPHA_OP" value="0x00000000" masked="yes">
            <bitfield pos="0" name="ALPHA_TEST"/>
            <bitfield pos="1" name="ALPHA_TEST_MASK"/>
            <bitfield high="6" low="4" name="ALPHA_FUNC" type="COMPARE_FUNC"/>
            <bitfield pos="7" name="ALPHA_FUNC_MASK"/>
        </reg32>
        <reg32 offset="0x01424" name="ALPHA_BLEND_COLOR" value="0x00000000">
            <bitfield high="7" low="0" name="B"/>
            <bitfield high="15" low="8" name="G"/>
            <bitfield high="23" low="16" name="R"/>
            <bitfield high="31" low="24" name="A"/>
        </reg32>
        <reg32 offset="0x01428" name="ALPHA_CONFIG" value="0x00000000" masked="yes">
            <bitfield pos="0" name="BLEND_ENABLE_COLOR" brief="Enable alpha blending"/>
            <bitfield pos="1" name="BLEND_ENABLE_COLOR_MASK"/>
            <bitfield pos="2" name="SRC_FUNC_COLOR_MASK"/>
            <bitfield pos="3" name="DST_FUNC_COLOR_MASK"/>
            <bitfield high="7" low="4" name="SRC_FUNC_COLOR" type="BLEND_FUNC"/>
            <bitfield high="11" low="8" name="DST_FUNC_COLOR" type="BLEND_FUNC"/>
            <bitfield high="14" low="12" name="EQ_COLOR" type="BLEND_EQ"/>
            <bitfield pos="15" name="EQ_COLOR_MASK"/>
            <bitfield pos="16" name="BLEND_ENABLE_ALPHA" brief="Enable alpha blending for alpha?">
                <doc>Always enabled together with BLEND_ENABLE_COLOR</doc>
            </bitfield>
            <bitfield pos="17" name="BLEND_ENABLE_ALPHA_MASK"/>
            <bitfield pos="18" name="SRC_FUNC_ALPHA_MASK"/>
            <bitfield pos="19" name="DST_FUNC_ALPHA_MASK"/>
            <bitfield high="23" low="20" name="SRC_FUNC_ALPHA" type="BLEND_FUNC"/>
            <bitfield high="27" low="24" name="DST_FUNC_ALPHA" type="BLEND_FUNC"/>
            <bitfield high="30" low="28" name="EQ_ALPHA" type="BLEND_EQ"/>
            <bitfield pos="31" name="EQ_ALPHA_MASK"/>
        </reg32>
        <reg32 offset="0x0142C" name="COLOR_FORMAT" value="0x00000000" masked="yes">
            <bitfield high="3" low="0" name="FORMAT" type="RS_FORMAT"/>
            <bitfield pos="4" name="FORMAT_MASK"/>
            <bitfield high="11" low="8" name="COMPONENTS" type="RGBA_BITS" brief="glColorMask"/>
            <bitfield pos="12" name="COMPONENTS_MASK"/>
            <bitfield pos="16" name="PARTIAL" brief="Set when alpha blending enabled or otherwise the destination is not fully overwritten"/>
            <bitfield pos="17" name="PARTIAL_MASK"/>
            <bitfield pos="20" name="SUPER_TILED" brief="64x64 alignment"/>
            <bitfield pos="21" name="SUPER_TILED_MASK"/>
        </reg32>
        <reg32 offset="0x01430" name="COLOR_ADDR" value="0x00000000" type="VIVM"/> <!-- pixelPipes == 1 -->
        <reg32 offset="0x01434" name="COLOR_STRIDE" value="0x00000000"/>
        <reg32 offset="0x01454" name="HDEPTH_CONTROL" value="0x00000000">
            <bitfield high="3" low="0" name="FORMAT">
                <value value="0" name="DISABLED" brief="Hierarchical Z disabled"/>
                <value value="5" name="D16" brief="16 bit depth"/>
                <value value="8" name="D24S8" brief="24 bit depth (+8 bit stencil or padding)"/>
            </bitfield>
        </reg32>
        <reg32 offset="0x01458" name="HDEPTH_ADDR" value="0x00000000" type="VIVM"/>
        <reg32 offset="0x0145C" name="UNK0145C" value="0x00000010"/>
        <stripe name="UNK01460" length="8" stride="4"> <!-- pixelPipes != 1 -->
            <!-- length="pixelPipes" -->
            <reg32 offset="0x1460" name="ADDR_UNK01460" value="0x00000000" type="VIVM"/>
            <reg32 offset="0x1480" name="ADDR_UNK01480" value="0x00000000" type="VIVM"/>
            <reg32 offset="0x1500" name="ADDR_UNK01500" value="0x00000000" type="VIVM"/>
            <reg32 offset="0x1520" name="ADDR_UNK01520" value="0x00000000" type="VIVM"/>
        </stripe>
        <reg32 offset="0x014A0" name="STENCIL_CONFIG_EXT" value="0x00000000" masked="yes">
            <bitfield high="7" low="0" name="REF_BACK" brief="glStencilFunc ref (GL_BACK)"/>
            <bitfield pos="8" name="REF_BACK_MASK"/>
            <bitfield pos="9" name="UNK16_MASK"/>
            <bitfield high="31" low="16" name="UNK16"/>
        </reg32>
        <reg32 offset="0x014A4" name="LOGIC_OP" value="0x000E400C"/>
        <reg32 offset="0x014A8" name="DITHER" value="0xFFFFFFFF" length="2"/>
        <reg32 offset="0x014B0" name="UNK014B0" value="0x00000000"/>
        <reg32 offset="0x014B4" name="UNK014B4" value="0x00000000"/>
        <reg32 offset="0x01580" name="UNK01580" value="0x00000000" length="3" stride="4"/>
    </stripe>     
    
    <stripe name="CO" brief="Compose states">
        <doc>Hardware composer. This functionality is present on some GCxxxx chips and allows
            for blending surfaces together with Porter-Diff composition methods, to accelerate the
            likes of Surfaceflinger (Android).</doc>
        <reg32 offset="0x03008" name="UNK03008" value="0x00000000"/>
        <reg32 offset="0x0300C" name="KICKER"/>
        <reg32 offset="0x03010" name="UNK03010"/>
        <reg32 offset="0x03014" name="UNK03014"/>
        <reg32 offset="0x03018" name="UNK03018"/>
        <reg32 offset="0x0301C" name="UNK0301C"/>
        <reg32 offset="0x03020" name="UNK03020"/>
        <reg32 offset="0x03024" name="UNK03024"/>
        <reg32 offset="0x03040" name="UNK03040"/>
        <reg32 offset="0x03044" name="UNK03044"/>
        <reg32 offset="0x03048" name="UNK03048"/>
        <stripe name="SAMPLER" length="8" stride="4">
            <reg32 offset="0x03060" name="UNK03060"/>
            <reg32 offset="0x03080" name="UNK03080"/>
            <reg32 offset="0x030A0" name="UNK030A0"/>
            <reg32 offset="0x030C0" name="UNK030C0"/>
            <reg32 offset="0x030E0" name="UNK030E0"/>
            <reg32 offset="0x03100" name="UNK03100"/>
            <reg32 offset="0x03120" name="UNK03120"/>
            <reg32 offset="0x03140" name="UNK03140"/>
            <reg32 offset="0x03160" name="UNK03160"/>
            <reg32 offset="0x03180" name="UNK03180"/>
            <reg32 offset="0x031A0" name="UNK031A0"/>
            <reg32 offset="0x031C0" name="UNK031C0"/>
            <reg32 offset="0x031E0" name="UNK031E0"/>
        </stripe>
        <array offset="0x03200" name="ADDR_UNK03200" length="8" stride="0x20">
            <reg32 offset="0" name="PPIPE" length="8"/> <!-- sampler*0x20 + pixelpipe*0x4 -->
        </array>
    </stripe>     
    
    <stripe name="RS" brief="Resolve states">
        <doc>To my current understanding, RESOLVE is a multifunctional copy/fill engine that can copy blocks of pixels from
            one place in memory to another, actually clearing tiles that are marked as cleared in the process. 
            Other capabilities are:

            - Conversion between pixel formats
            - Downsampling (2x horizontal or horizontal and vertical)
            - Fill with constant value
            - Partial fill (only clear part of the channels)
            - Tiling / untiling, for normal tiled and supertiled surfaces
            - Swap blue and red channels, flip image in Y
            - Endian swapping
        </doc>
        <reg32 offset="0x01600" name="KICKER" brief="Resolve start" value="0x00000000">
            <doc>Write some value to this register to kick off resolver</doc>
        </reg32>
        <reg32 offset="0x01604" name="CONFIG" brief="Resolve configuration register" value="0x00000000">
            <bitfield high="4" low="0" name="SOURCE_FORMAT" type="RS_FORMAT" brief="Source color format"/>
            <bitfield high="6" low="5" name="DOWNSAMPLE" brief="Downsampling factor">
                <doc>
                    A resolve operation can downsample a supersampled surface.
                    This functionality is also used to compute mipmaps.
                </doc>
                <value value="0" name="NONE"/>
                <value value="1" name="X" brief="Downsample horizontally"/>
                <value value="2" name="Y" brief="Downsample vertically"/>
                <value value="3" name="XY" brief="Downsample horizontally and vertically"/>
            </bitfield>
            <bitfield pos="7" name="SOURCE_TILED" brief="Source is tiled"/>
            <bitfield high="12" low="8" name="DEST_FORMAT" type="RS_FORMAT" brief="Destination color format"/>
            <bitfield pos="14" name="DEST_TILED" brief="Destination is tiled"/>
            <bitfield pos="29" name="SWAP_RB" brief="Swap red and blue"/>
            <bitfield pos="30" name="FLIP" brief="Flip image in Y direction"/>
        </reg32>
        <reg32 offset="0x01608" name="SOURCE_ADDR" value="0x00000000" type="VIVM"/>
        <reg32 offset="0x0160C" name="SOURCE_STRIDE" value="0x00000000">
            <bitfield high="17" low="0" name="STRIDE" brief="Source stride"/>
            <bitfield pos="31" name="TILING" brief="Source is tiled"/>
        </reg32>
        <reg32 offset="0x01610" name="DEST_ADDR" value="0x00000000" type="VIVM"/>
        <reg32 offset="0x01614" name="DEST_STRIDE" value="0x00000000">
            <bitfield high="17" low="0" name="STRIDE" brief="Destination stride"/>
            <bitfield pos="31" name="TILING" brief="Destination is tiled"/>
        </reg32>
        <reg32 offset="0x01620" name="WINDOW_SIZE" value="0x00000000" brief="Size of area to resolve">
            <doc>
                When downsampling the source and destination size will be different. 
                In this case, the WINDOW_SIZE will be the (unscaled) source size.
            </doc>
            <bitfield high="31" low="16" name="HEIGHT" type="uint"/>
            <bitfield high="15" low="0" name="WIDTH" type="uint"/>
        </reg32>
        <reg32 offset="0x01630" name="DITHER" value="0x00000000" length="2" stride="4"/>
        <reg32 offset="0x0163C" name="CLEAR_CONTROL" value="0x00000000">
            <bitfield high="15" low="0" name="BITS" brief="Affects which channels of which tiles are cleared"/>
            <bitfield high="17" low="16" name="MODE" brief="Enable clearing (disregards source)">
                <value value="0" name="DISABLED"/>
                <value value="1" name="ENABLED"/> <!-- is there difference between these modes? -->
                <value value="2" name="ENABLED2"/>
                <value value="3" name="ENABLED3"/>
            </bitfield>
        </reg32>
        <reg32 offset="0x01640" name="FILL_VALUE" value="0x00000000" length="4" stride="4"/>
        <reg32 offset="0x01650" name="FLUSH_CACHE" brief="Flush resolve cache" value="0x00000000">
            <bitfield pos="0" name="FLUSH"/>
        </reg32>
        <reg32 offset="0x016A0" name="EXTRA_CONFIG" value="0x00000000">
            <bitfield high="1" low="0" name="AA" brief="Anti-aliasing mode (not used for MSAA)"/>
            <bitfield high="9" low="8" name="ENDIAN" type="ENDIAN_MODE"/>
        </reg32>
        <reg32 offset="0x016B4" name="UNK016B4" value="0x00000000"/>
        <stripe name="UNK016C0" length="8" stride="4"> <!-- pixelPipes > 1 -->
            <!-- length="pixelPipes" -->
            <reg32 offset="0x016C0" name="UNK016C0" value="0x00000000" type="VIVM"/>
            <reg32 offset="0x016E0" name="UNK016E0" value="0x00000000" type="VIVM"/>
            <reg32 offset="0x01700" name="UNK01700" value="0x00000000"/>
        </stripe>
    </stripe>
    
    <stripe name="TS" brief="Tile Status">
        <doc>Tile status block contains information about the tiles to be resolved.</doc>
        <reg32 offset="0x01654" name="MEM_CONFIG" brief="Memory configuration" value="0x00200000">
            <bitfield pos="0" name="DEPTH_FAST_CLEAR" brief="Clear depth tiles on resolve"/>
            <bitfield pos="1" name="COLOR_FAST_CLEAR" brief="Clear color tiles on resolve"/>
            <bitfield pos="3" name="DEPTH_16BPP"/>
            <bitfield pos="4" name="DEPTH_AUTO_DISABLE" brief="Auto disable fast clear for depth"/>
            <bitfield pos="5" name="COLOR_AUTO_DISABLE" brief="Auto disable fast clear for color"/>
            <bitfield pos="6" name="DEPTH_COMPRESSION" brief="Enable depth compression"/>
            <bitfield pos="7" name="MSAA" brief="This bit is enabled when MSAA samples >= 2">
                <doc>
                    The main bits for switching MSAA in rendering are in register #0x03818, these bits
                    in the TS memory configuration appear to affect the writing of tiles in a minor way.
                </doc>
            </bitfield>
            <bitfield high="11" low="8" name="MSAA_FORMAT">
                <value value="0" name="A4R4G4B4"/>
                <value value="1" name="A1R5G5B5"/>
                <value value="2" name="R5G6B5"/>
                <value value="3" name="A8R8G8B8"/>
                <value value="4" name="X8R8G8B8"/>
            </bitfield>
        </reg32>
        <reg32 offset="0x01658" name="COLOR_STATUS_BASE" brief="Color tile status base address" value="0x00000000" type="VIVM"/>
        <reg32 offset="0x0165C" name="COLOR_SURFACE_BASE" brief="Color surface base address" value="0x00000000" type="VIVM"/>
        <reg32 offset="0x01660" name="COLOR_CLEAR_VALUE" brief="Color clear value" value="0x00000000"/>
        <reg32 offset="0x01664" name="DEPTH_STATUS_BASE" brief="Depth tile status base address" value="0x00000000" type="VIVM"/>
        <reg32 offset="0x01668" name="DEPTH_SURFACE_BASE" brief="Depth surface base address" value="0x00000000" type="VIVM"/>
        <reg32 offset="0x0166C" name="DEPTH_CLEAR_VALUE" brief="Depth clear value" value="0x00000000"/>
        <reg32 offset="0x01670" name="COLOR_AUTO_DISABLE_COUNT" brief="Auto disable depth counter" value="0x00000000"/>
        <reg32 offset="0x01674" name="DEPTH_AUTO_DISABLE_COUNT" brief="Auto disable color counter" value="0x00000000"/>
        <reg32 offset="0x016A4" name="HDEPTH_BASE" value="0x00000000" type="VIVM"/>
        <reg32 offset="0x016A8" name="HDEPTH_CLEAR_VALUE" brief="Hierarchical depth clear value" value="0x00000000"/>
        <stripe name="SAMPLER" length="8" stride="4"> <!-- Tile status for samplers -->
            <reg32 offset="0x01720" name="CONFIG" value="0x00000000">
                <bitfield high="1" low="0" name="ENABLE"/>
                <bitfield high="7" low="4" name="FORMAT"/>
            </reg32>
            <reg32 offset="0x01740" name="STATUS_BASE" value="0x00000000" type="VIVM"/>
            <reg32 offset="0x01760" name="CLEAR_VALUE" value="0x00000000"/>
        </stripe>
    </stripe>

    <stripe name="YUV" brief="YUV tiler states">
        <doc>The YUV tiler can combine planar YUV formats to RGB or non-planar YUV formats.</doc>
        <reg32 offset="0x01678" name="UNK01678" value="0x00000000"/>
        <reg32 offset="0x0167C" name="UNK0167C" value="0x00000000"/>
        <reg32 offset="0x01680" name="UNK01680" value="0x00000000" type="VIVM"/>
        <reg32 offset="0x01684" name="UNK01684" value="0x00000000"/>
        <reg32 offset="0x01688" name="UNK01688" value="0x00000000" type="VIVM"/>
        <reg32 offset="0x0168C" name="UNK0168C" value="0x00000000"/>
        <reg32 offset="0x01690" name="UNK01690" value="0x00000000" type="VIVM"/>
        <reg32 offset="0x01694" name="UNK01694" value="0x00000000"/>
        <reg32 offset="0x01698" name="UNK01698" value="0x00000000" type="VIVM"/>
        <reg32 offset="0x0169C" name="UNK0169C" value="0x00000000"/>
    </stripe>

    <stripe name="TE" brief="TExture sampler states">
        <doc>Texture sampling, filtering, LOD, etc</doc>
        <stripe name="SAMPLER" length="12" stride="4"> 
            <reg32 offset="0x2000" name="CONFIG0" value="0x00000000">
                <bitfield high="2" low="0" name="TYPE" type="TEXTURE_TYPE"/>
                <bitfield high="4" low="3" name="UWRAP" type="TEXTURE_WRAPMODE"/>
                <bitfield high="6" low="5" name="VWRAP" type="TEXTURE_WRAPMODE"/>
                <bitfield high="8" low="7" name="MIN" type="TEXTURE_FILTER"/>
                <bitfield high="10" low="9" name="MIP" type="TEXTURE_FILTER"/>
                <bitfield high="12" low="11" name="MAG" type="TEXTURE_FILTER"/>
                <bitfield high="17" low="13" name="FORMAT" type="TEXTURE_FORMAT"/>
            </reg32>
            <reg32 offset="0x2040" name="SIZE" value="0x00000000">
                <bitfield high="15" low="0" name="WIDTH" type="uint"/>
                <bitfield high="31" low="16" name="HEIGHT" type="uint"/>
            </reg32>
            <reg32 offset="0x2080" name="LOG_SIZE" value="0x00000000">
                <bitfield high="9" low="0" name="WIDTH" type="fixedp"/>
                <bitfield high="19" low="10" name="HEIGHT" type="fixedp"/>
            </reg32>
            <reg32 offset="0x20C0" name="LOD_CONFIG" value="0x00000000">
                <bitfield high="10" low="1" name="MAX" type="fixedp" brief="Maximum LOD level"/>
                <bitfield high="20" low="11" name="MIN" type="fixedp" brief="Minimum LOD level"/>
                <bitfield high="30" low="21" name="BIAS" type="fixedp" brief="LOD bias"/>
            </reg32>
            <reg32 offset="0x2100" name="UNK02100" value="0x00000000"/>
            <reg32 offset="0x2140" name="UNK02140" value="0x00000000"/>
            <reg32 offset="0x2180" name="UNK02180" value="0x00000000"/>
            <reg32 offset="0x21C0" name="CONFIG1" value="0x00321000">
                <bitfield high="4" low="0" name="FORMAT_EXT" type="TEXTURE_FORMAT_EXT"/>
            </reg32>
            <reg32 offset="0x2200" name="UNK02200" value="0x00000000"/>
            <reg32 offset="0x2240" name="UNK02240" value="0x00000000"/>
            <reg32 offset="0x2400" name="LOD_ADDR" length="14" stride="0x40" type="VIVM"/> <!-- Base address, per LOD level -->
        </stripe>
    </stripe>
    
    <stripe name="NTE" brief="New texture states">
        <doc>Extra texture states for newer hardware. These exist if chipMinorFeatures2 bit 11 set.</doc>
        <array offset="0x10000" name="SAMPLER" length="32" stride="4">
            <reg32 offset="0x000" name="CONFIG_1" value="0x00000000"/> <!-- probably same as under TEXTURE.SAMPLER -->
            <reg32 offset="0x080" name="SIZE" value="0x00000000"/>
            <reg32 offset="0x100" name="LOG_SIZE" value="0x00000000"/>
            <reg32 offset="0x180" name="LOD" value="0x00000000"/>
            <reg32 offset="0x200" name="UNK10200" value="0x00000000"/>
            <reg32 offset="0x280" name="UNK10280" value="0x00000000"/>
            <reg32 offset="0x300" name="UNK10300" value="0x00000000"/>
            <reg32 offset="0x380" name="CONFIG_2" value="0x00321000"/>
            <reg32 offset="0x400" name="UNK10400" value="0x00000000"/>
            <reg32 offset="0x480" name="UNK10480" value="0x00000000"/>
        </array>
        <array offset="0x10800" name="SAMPLER_ADDR" length="32" stride="64"> <!-- Per sampler -->
            <!-- length="texBlockCount"
                 where texBlockCount=12 if chipModel == GC2000 && chipRevision == 0x5108, otherwise 32
             -->
            <reg32 offset="0" name="LOD" length="14" stride="4" type="VIVM"/> <!-- Base address, per LOD level -->
        </array>
        <reg32 offset="0x12000" name="UNK12000" value="0x00000000" length="256" stride="4"/> <!-- chipMinorFeatures2 bit 15 set -->
        <reg32 offset="0x12400" name="UNK12400" value="0x00000000" length="256" stride="4"/> <!-- chipMinorFeatures2 bit 15 set -->
    </stripe>
    
    <stripe name="SH" brief="Unified shader instruction memory">
        <doc>Shader instruction memory on new hardware that supports more than 256, or more than
            1024 shader instructions (different areas are used based on these cases).</doc>
        <reg32 offset="0x0085C" name="UNK0085C" value="0x00000000"/> <!-- instructionCount > 1024 -->
        <reg32 offset="0x00860" name="UNK00860" value="0x00000000"/> <!-- instructionCount > 1024 -->
        <reg32 offset="0x0101C" name="UNK0101C" value="0x00000100"/> <!-- instructionCount > 1024 -->
        <reg32 offset="0x20000" name="UNK20000" value="0x00000000" length="8192" stride="4"> <!-- instructionCount > 1024 -->
            <!-- length="instructionCount * 4" -->
        </reg32>
        <reg32 offset="0x0C000" name="UNK0C000" value="0x00000000" length="4096" stride="4"> <!-- 256 > instructionCount > 1024 -->
            <!-- length="instructionCount * 4" -->
        </reg32>
        <reg32 offset="0x08000" name="UNK0C000_MIRROR" value="0x00000000" length="4096" stride="4"> <!-- 256 > instructionCount > 1024 -->
            <!-- length="instructionCount * 4" -->
        </reg32>
    </stripe>

    <!-- VG states 0x02800 - 0x02A00 -->

    <stripe name="DUMMY" brief="/dev/null">
        <doc>Dummy state write, sometimes used for inserting padding or small delays into the command stream.</doc>
        <reg32 offset="0x3FFFC" name="DUMMY"/>
    </stripe>
</domain>

</database>

